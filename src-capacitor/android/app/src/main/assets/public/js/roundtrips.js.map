{"version":3,"sources":["webpack:///./src/pages/Roundtrips.vue?5406","webpack:///src/pages/Roundtrips.vue","webpack:///./src/pages/Roundtrips.vue?2fae","webpack:///./src/pages/Roundtrips.vue","webpack:///./src/pages/roundtripDetails.vue?863a","webpack:///src/pages/roundtripDetails.vue","webpack:///./src/pages/roundtripDetails.vue?2907","webpack:///./src/pages/roundtripDetails.vue","webpack:///./src/pages/RoundtripOverview.vue?3977","webpack:///src/pages/RoundtripOverview.vue","webpack:///./src/pages/RoundtripOverview.vue?1798","webpack:///./src/pages/RoundtripOverview.vue"],"names":[],"mappings":";;;;;;;;;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,yBAAyB,YAAY,wCAAwC,YAAY,aAAa,uEAAuE,oBAAoB,aAAa,yBAAyB,QAAQ,+BAA+B,eAAe,OAAO,8BAA8B,mOAAmO,aAAa,uBAAuB,QAAQ,iFAAiF,KAAK,yBAAyB,mCAAmC,sBAAsB,4BAA4B,qBAAqB,OAAO,iBAAiB,GAAG,YAAY,UAAU,0CAA0C,aAAa,oBAAoB,gBAAgB,OAAO,0BAA0B,YAAY,OAAO,8CAA8C,YAAY,+BAA+B,YAAY,0BAA0B,4CAA4C,OAAO,oKAAoK,6DAA6D,EAAE,EAAE,KAAK,sBAAsB,sBAAsB,4BAA4B,qBAAqB,OAAO,kBAAkB,GAAG,YAAY,EAAE,8BAA8B,0CAA0C,wBAAwB,sEAAsE,YAAY,UAAU,6CAA6C,gBAAgB,uBAAuB,gBAAgB,sDAAsD,wBAAwB,QAAQ,iCAAiC,sBAAsB,4BAA4B,qBAAqB,oCAAoC,gBAAgB,GAAG,YAAY,UAAU,iDAAiD,oBAAoB,2BAA2B,sBAAsB,wBAAwB,qDAAqD,eAAe,OAAO,6DAA6D,KAAK,qBAAqB,oCAAoC,GAAG,QAAQ,iDAAiD,oBAAoB,2BAA2B,yBAAyB,gCAAgC,2EAA2E,sBAAsB,4BAA4B,qBAAqB,OAAO,sBAAsB,GAAG,YAAY,UAAU,8CAA8C,iBAAiB,wBAAwB,UAAU,yBAAyB,yBAAyB,+CAA+C,yBAAyB,oBAAoB,mCAAmC,0BAA0B,yBAAyB,4DAA4D,+BAA+B,QAAQ,iDAAiD,oBAAoB,2BAA2B,yBAAyB,sCAAsC,sDAAsD,gBAAgB,OAAO,qJAAqJ,KAAK,yBAAyB,+BAA+B,QAAQ,0CAA0C,aAAa,oBAAoB,kJAAkJ,sCAAsC,oBAAoB,sBAAsB,2BAA2B,4GAA4G,OAAO,WAAW,eAAe,OAAO,eAAe,kHAAkH,YAAY,GAAG,sCAAsC,wBAAwB,gBAAgB,8CAA8C,KAAK,yBAAyB,+BAA+B,QAAQ,uDAAuD,0BAA0B,iCAAiC,EAAE,4BAA4B,sCAAsC,oBAAoB,sBAAsB,2BAA2B,2GAA2G,OAAO,WAAW,eAAe,OAAO,eAAe,6GAA6G,YAAY,GAAG,iDAAiD,wBAAwB,iBAAiB,8CAA8C,KAAK,yBAAyB,+BAA+B,QAAQ,2DAA2D,8BAA8B,qCAAqC,EAAE,4BAA4B,sCAAsC,oBAAoB,sBAAsB,2BAA2B,+GAA+G,OAAO,WAAW,eAAe,OAAO,eAAe,yGAAyG,YAAY,GAAG,qDAAqD,wBAAwB,oBAAoB,sDAAsD,KAAK,yBAAyB,+BAA+B,QAAQ,iEAAiE,oCAAoC,2CAA2C,EAAE,yBAAyB,qDAAqD,uBAAuB,wBAAwB,OAAO,uBAAuB,kBAAkB,OAAO,iCAAiC,2DAA2D,uCAAuC,oBAAoB,oCAAoC,iBAAiB,2BAA2B,IAAI,kBAAkB,YAAY,2CAA2C,+CAA+C,YAAY,uBAAuB,YAAY,+BAA+B,eAAe,OAAO,kBAAkB,wHAAwH,uBAAuB,aAAa,aAAa,yCAAyC,kIAAkI,0CAA0C,iEAAiE,YAAY,8BAA8B,oBAAoB,2CAA2C,iBAAiB,2BAA2B,IAAI,kBAAkB,+FAA+F,iBAAiB,0DAA0D,oBAAoB,oCAAoC,MAAM,2FAA2F,YAAY,4BAA4B,cAAc,gCAAgC,2GAA2G,gBAAgB,8BAA8B,YAAY,oCAAoC,iBAAiB,aAAa,yCAAyC,oBAAoB,gDAAgD,4BAA4B,gDAAgD,uBAAuB,iBAAiB,2BAA2B,2CAA2C,QAAQ,iDAAiD,kCAAkC,+BAA+B,eAAe,+BAA+B,sBAAsB,aAAa,4BAA4B,yOAAyO,uBAAuB,eAAe,+BAA+B,kBAAkB,+DAA+D,uBAAuB,aAAa,wBAAwB,kDAAkD,0BAA0B,+FAA+F,mCAAmC,UAAU,+BAA+B,sDAAsD,2CAA2C,qBAAqB,uLAAuL,6BAA6B,YAAY,uBAAuB,UAAU,kCAAkC,2LAA2L,OAAO,4CAA4C,iBAAiB,aAAa,gEAAgE,QAAQ,eAAe,cAAc,OAAO,yDAAyD,8KAA8K,8BAA8B,oBAAoB,2CAA2C,MAAM,2FAA2F,kCAAkC,sBAAsB,+CAA+C,yBAAyB,6CAA6C,gCAAgC,gFAAgF,KAAK,yBAAyB,iCAAiC,QAAQ,iDAAiD,oBAAoB,2BAA2B;AACvyV,oCAAoC,aAAa,0BAA0B,wBAAwB,iBAAiB,gCAAgC,8HAA8H,UAAU,OAAO,wCAAwigB/U;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA,uDADA;AAEA;AACA;AAAA;AAAA;AAAA;AADA;AAFA;AAMA,GARA;;AASA;AACA;AACA,gCADA;AAEA,yCAFA;AAGA,yBAHA;AAIA,oBAJA;AAKA,mBALA;AAMA,oBANA;AAOA,oCAPA;AAQA,mBACA,UADA,EACA,UADA,EACA,WADA,EACA,YADA,EACA,WADA,CARA;AAWA;AACA,cADA;AAEA;AAFA,OAXA;AAeA,+BAfA;AAgBA,uBAhBA;AAiBA,2BAjBA;AAkBA,kBAlBA;AAmBA,6BAnBA;AAoBA,qCApBA;AAqBA,oBArBA;AAsBA,oDAtBA;AAuBA,4BAvBA;AAwBA,mBAxBA;AAyBA,eAzBA;AA0BA,iBA1BA;AA2BA,oBA3BA;AA4BA,sBA5BA;AA6BA,uBA7BA;AA8BA,8BA9BA;AA+BA,oBACA,mBADA,EACA,kBADA,EACA,4BADA,EACA,2BADA,EACA,kBADA,CA/BA;AAkCA;AACA,iBAnCA;AAoCA,yBApCA;AAqCA,0BArCA;AAsCA,oBAtCA;AAuCA;AAvCA;AAyCA,GAnDA;;AAoDA,oBApDA;AAqDA;AACA;AACA;AACA,KAHA;;AAIA;AACA;AACA;;AANA,GArDA;AA6DA;AACA;AACA;AACA;AACA;AACA,OAHA;AAIA,KANA;;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA,KAdA;;AAeA;AACA;AACA;AACA;AACA,OAHA;AAIA,KApBA;;AAqBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,8EACA,KADA,CACA,UADA,EACA,gBADA,EACA,YADA,EAEA,KAFA,CAEA,QAFA,EAEA,IAFA,EAEA,IAFA;AAIA;AAEA;AAEA;AACA;AACA,OAFA;AAIA;AACA;AACA,OAFA;AAIA;AACA;AAEA,0BACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,SARA;AAUA;AACA;AACA;AAEA;AACA;AACA,OAlBA;AAmBA,KA1EA;;AA2EA;AACA;AACA;AACA;AACA;AACA,OAFA;AAGA;AACA,KAlFA;;AAmFA;AACA;AACA,KArFA;;AAsFA;AACA;AACA;AACA,kEACA,KADA,CACA,SADA,EACA,IADA,EACA,MADA,EAEA,KAFA,CAEA,CAFA;AAGA,oBACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA,SAJA;AAKA,OAPA;AAQA,KApGA;;AAqGA;AACA;AACA;AACA;AACA;AACA,OAHA;AAIA,KA3GA;;AA4GA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8EACA,KADA,CACA,UADA,EACA,gBADA,EACA,YADA,EAEA,KAFA,CAEA,QAFA,EAEA,IAFA,EAEA,IAFA,EAGA,OAHA,CAGA,WAHA,EAIA,OAJA,CAIA,eAJA,EAKA,KALA,CAKA,EALA;;AAOA;AACA,4EACA,KADA,CACA,UADA,EACA,gBADA,EACA,YADA,EAEA,KAFA,CAEA,QAFA,EAEA,IAFA,EAEA,IAFA,EAGA,KAHA,CAGA,MAHA,EAGA,IAHA,EAGA,aAHA,EAIA,OAJA,CAIA,WAJA,EAKA,OALA,CAKA,eALA,EAMA,KANA,CAMA,EANA;AAOA,OAhCA,CAkCA;;;AACA;AACA;AACA,4CArCA,CAuCA;;AACA;AACA;AACA;AACA;AAEA,0BACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA,uDAHA,CAKA;;AACA;AAEA;AACA;AACA;AACA,SAZA,EADA,CAeA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAPA;AASA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA,OApCA,EAqCA,KArCA,CAqCA;AACA;AACA;AACA,wBADA;AAEA,4BAFA;AAGA,uBAHA;AAIA;AAJA;AAMA,OA7CA;AA8CA,KAvMA;;AAwMA;AACA;AACA;AACA,KA3MA;;AA4MA;AACA,6EACA,KADA,CACA,UADA,EACA,gBADA,EACA,YADA,EAEA,KAFA,CAEA,QAFA,EAEA,IAFA,EAEA,IAFA,EAGA,OAHA,CAGA,WAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA,SAHA;AAIA,OANA;AAOA,KA3NA;;AA4NA;AACA;AACA;AACA;AACA;;AACA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;AA0CA;AACA;AACA;AACA,KAFA;AAGA,GA9CA;;AA+CA;AACA;AACA;AACA,KAHA;;AAIA;AACA;AACA,KANA;;AAOA;AACA;AACA;;AATA,GA/CA;;AA0DA;AACA;AACA,4BADA;AAEA;AACA;AAAA;AAAA;AAAA;AADA;AAFA;AAMA,GAjEA;;AAkEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;;AAEA;AACA,8CAXA,CAaA;;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA,OAxBA,EAwBA,KAxBA,CAwBA;AACA;AACA,OA1BA;AA2BA,KA7BA;;AA8BA;AACA;AACA,wFACA,6EAHA,CAKA;;AACA;AACA;AAEA;AACA,KAxCA;;AAyCA;AACA;AACA;AACA,KA5CA;;AA6CA;AACA,4EACA,KADA,CACA,MADA,EACA,IADA,EACA,IADA,EAEA,OAFA,CAEA,MAFA;AAGA,0BACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA,SAHA;AAIA;AACA,OARA;AASA,KA1DA;;AA2DA;AACA;AACA,kCADA;AAEA,iCAFA;AAGA,6DAHA;AAIA,4DAJA;AAKA,oDALA;AAMA,uBANA;AAOA;AAPA,SAQA,IARA,CAQA;AACA;AACA;AACA,OAXA;AAYA,KAxEA;;AAyEA;AACA;AACA,kEACA,KADA,CACA,SADA,EACA,IADA,EACA,MADA,EAEA,KAFA,CAEA,CAFA;AAGA,oBACA,IADA,CACA;AACA;AACA;AACA,SAFA;AAGA,OALA;AAMA,KApFA;;AAqFA;AACA;AACA;AACA;AACA,oFACA,KADA,CACA,MADA,EACA,IADA,EACA,IADA,EAEA,OAFA,CAEA,UAFA;AAGA,0BACA,IADA,CACA;AACA;AACA;AACA;AACA;AACA,SAHA;AAKA;AACA;AAEA,2BAVA,CAYA;;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA,WAdA,MAcA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA,SAjCA;AAkCA;AAEA;AACA;AAEA;AACA;AACA;AACA,sHACA,sCADA,EACA,mFADA,EAEA,uFAFA,EAEA,uEAFA,EAEA,+CAFA;;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA,aAXA,CAaA;;;AACA;AACA,sCADA,CAGA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,iBAJA;AAKA,eANA,EAMA,KANA,CAMA;AACA;AACA,eARA;AASA;AACA,WA9BA;AA+BA,SAhCA,EApDA,CAsFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA,aAHA,MAGA;AACA;AACA;AACA,eAFA,MAEA;AACA;AACA;AACA;AACA;AACA,WAZA;AAaA;AACA,SAfA,EAeA,GAfA;AAgBA,OA5GA,EA6GA,KA7GA,CA6GA;AACA;AACA,OA/GA;AAgHA,KA5MA;;AA6MA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,WAHA,MAGA;AACA;AACA;;AAEA,qCARA,CAUA;;AACA;AAEA;AAEA,6CAfA,CAiBA;;AACA,oCAlBA,CAoBA;;AACA;AACA;AACA;AACA;AACA,uDAzBA,CA2BA;;AACA;AACA;AACA,sCAFA,CAIA;;AACA;AACA;AADA,eAEA,KAFA,CAEA;AACA;AACA,aAJA,EALA,CAWA;;AACA,gGACA,KADA,CACA,MADA,EACA,IADA,EACA,YADA;AAEA,sCACA,IADA,CACA;AACA;AACA,+CADA,CAGA;;AACA,kDAJA,CAMA;;AACA;AAEA;AACA;AAEA;AACA,8EACA,KADA,CACA,SADA,EACA,IADA,EACA,MADA,EAEA,KAFA,CAEA,CAFA;AAGA,gCACA,IADA,CACA;AACA;AACA;AACA;AACA;AADA;AAGA,qBALA;AAMA,mBARA,EAQA,KARA,CAQA;AACA;AACA,mBAVA,EAPA,CAmBA;;AACA;AACA;AACA,iBAtBA,EAsBA,KAtBA,CAsBA;AACA;AACA,iBAxBA;AAyBA,eAlCA;AAmCA,aArCA;AAsCA,WApDA,EAoDA,KApDA,CAoDA;AACA;AACA,WAtDA;AAuDA,SAnFA;AAqFA;AACA,KA5SA;;AA6SA;;;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA,KAxTA;;AAyTA;AACA;AACA;AACA;AACA,OAHA;AAKA,KA/TA;;AAgUA;AACA;AACA;;AAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAzUA;;AA0UA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA,OAZA,MAYA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,KA3VA;;AA4VA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AARA;AAUA,KAvWA;;AAwWA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AARA;AAUA,KAnXA;;AAoXA;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACA;AACA,KAlZA;;AAmZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAHA;AAIA,SAPA;AAQA,OATA,EASA,KATA,CASA;AACA;AACA,OAXA;AAYA;;AAlaA,GAlEA;;AAseA;AACA;AACA,GAxeA;;AAyeA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AAvfA,G;;ACzb0L,CAAgB,2HAAG,EAAC,C;;;;;ACA/G;AAC3B;AACL;;;AAG/D;AAC0F;AAC1F,gBAAgB,8CAAU;AAC1B,EAAE,8CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,uG;;;;;;;;;;;AClBf,0BAA0B,aAAa,0BAA0B,wBAAwB,8BAA8B,yBAAyB,YAAY,6BAA6B,wJAAwJ,OAAO,0BAA0B,YAAY,aAAa,sCAAsC,QAAQ,qCAAqC,YAAY,qCAAqC,oBAAoB,mCAAmC,wEAAwE,SAAS,2BAA2B,WAAW,4BAA4B,qCAAqC,qBAAqB,6DAA6D,6BAA6B,oMAAoM,OAAO,0BAA0B,YAAY,OAAO,qCAAqC,0CAA0C,iBAAiB,sDAAsD,oBAAoB,mCAAmC,iDAAiD,SAAS,oCAAoC,WAAW,4BAA4B,2CAA2C,4BAA4B,oCAAoC,kDAAkD;AACplD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoDA;AACA;AACA;AACA;AACA,uBADA;AAEA;AACA;AAAA;AAAA;AAAA;AADA;AAFA,GADA;;AAQA;AACA;AACA;AADA;AAGA,GAZA;;AAaA,2BAbA;AAcA;AACA;AACA,4EACA,OADA,CACA,MADA,EAEA,KAFA,CAEA,GAFA;AAIA,yBACA,IADA,CACA;AACA;AACA;AACA,SAFA;AAGA,OALA;AAMA;;AAZA,GAdA;;AA4BA;AACA;AACA;;AA9BA,G;;ACvD2L,CAAgB,6HAAG,EAAC,C;;;;;ACA/G;AAC3B;AACL;;;AAGhE;AAC0F;AAC1F,gBAAgB,8CAAU;AAC1B,EAAE,+CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,wG","file":"js/roundtrips.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"roundtrips\"},[_c('div',{staticClass:\"topic flex justify-center\"},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"center\"}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":\"/rundreisen-uebersicht\"}},[_c('q-icon',{attrs:{\"name\":\"keyboard_arrow_left\"}}),_vm._v(\"\\n        zurück zu allen Ländern\\n      \")],1)],1),_c('h2',[_vm._v(_vm._s(_vm.selectedCountry)+\": \"+_vm._s(_vm.roundtripCount)+\" Rundreise\"+_vm._s(_vm.roundtripCount === 1 ? null : 'n')+\" gefunden\")]),_c('q-select',{staticStyle:{\"padding\":\"0 10px 0 0\"},attrs:{\"outlined\":\"\",\"input-debounce\":\"0\",\"options\":_vm.sortOptions,\"label\":\"Sortieren\"},on:{\"input\":function($event){return _vm.sortRoundtrips($event)}},scopedSlots:_vm._u([{key:\"prepend\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"search\"}})]},proxy:true}]),model:{value:(_vm.sort),callback:function ($$v) {_vm.sort=$$v},expression:\"sort\"}})],1),_c('div',{attrs:{\"id\":\"CardBackgroundImg\"}}),_c('div',{attrs:{\"id\":\"RoundtripCardBackgroundImgPlaceholder\"}},[_c('div',{staticClass:\"filter-container\"},[_c('div',{staticClass:\"filter-card\"},[_c('h2',[_vm._v(\"Suche\")]),_c('q-select',{attrs:{\"outlined\":\"\",\"use-input\":\"\",\"hide-selected\":\"\",\"fill-input\":\"\",\"input-debounce\":\"0\",\"options\":_vm.countryOptions,\"label\":\"Land auswählen\",\"rules\":[function (val) { return val !== null && val !== '' || 'Bitte wähle ein Land'; }]},on:{\"filter\":_vm.filterFn},scopedSlots:_vm._u([{key:\"prepend\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"explore\"}})]},proxy:true},{key:\"no-option\",fn:function(){return [_c('q-item',[_c('q-item-section',{staticClass:\"text-grey\"},[_vm._v(\"\\n                Keine Ergebnisse\\n              \")])],1)]},proxy:true}]),model:{value:(_vm.country),callback:function ($$v) {_vm.country=$$v},expression:\"country\"}}),_c('q-input',{staticClass:\"input-item rounded-borders\",staticStyle:{\"padding-bottom\":\"20px\"},attrs:{\"outlined\":\"\",\"label\":\"Zeitraum\"},scopedSlots:_vm._u([{key:\"prepend\",fn:function(){return [_c('q-icon',{staticClass:\"cursor-pointer\",attrs:{\"name\":\"event\"}})]},proxy:true}]),model:{value:(_vm.OfferPeriod),callback:function ($$v) {_vm.OfferPeriod=$$v},expression:\"OfferPeriod\"}},[_c('q-popup-proxy',{ref:\"qDateProxy\",attrs:{\"transition-show\":\"scale\",\"transition-hide\":\"scale\"}},[_c('q-date',{attrs:{\"today-btn\":\"\",\"mask\":\"DD.MM.YYYY\",\"options\":_vm.dateOptions},on:{\"input\":function () { return _vm.$refs.qDateProxy.hide(); }},model:{value:(_vm.OfferPeriod),callback:function ($$v) {_vm.OfferPeriod=$$v},expression:\"OfferPeriod\"}})],1)],1),_c('q-select',{staticClass:\"input-item\",attrs:{\"outlined\":\"\",\"options\":_vm.dayOptions,\"label\":\"Reisedauer\",\"clearable\":\"\"},scopedSlots:_vm._u([{key:\"prepend\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"access_time\"}})]},proxy:true}]),model:{value:(_vm.dayModel),callback:function ($$v) {_vm.dayModel=$$v},expression:\"dayModel\"}}),_c('a',{staticClass:\"button\",on:{\"click\":function($event){_vm.$router.push('/rundreisen/' + _vm.country); _vm.getRoundtrips(true); _vm.getRTCount()}}},[_vm._v(\"Suchen\")])],1),_c('div',{staticClass:\"filter-card\"},[_c('q-expansion-item',{staticClass:\"rounded-borders filter-expansion-label\",attrs:{\"label\":\"Filter\",\"bordered\":\"\"},model:{value:(_vm.isNotMobile),callback:function ($$v) {_vm.isNotMobile=$$v},expression:\"isNotMobile\"}},[_c('q-expansion-item',{staticClass:\"filter-expansion\",attrs:{\"label\":\"Gesamtpreis pro Person\",\"default-opened\":\"\"}},[_c('q-range',{attrs:{\"min\":0,\"max\":_vm.maxPrice,\"step\":10,\"left-label-value\":_vm.step.min + ' €',\"right-label-value\":_vm.step.max + ' €',\"label\":\"\",\"color\":\"deep-orange\"},on:{\"input\":function($event){return _vm.filterRoundtrips()}},model:{value:(_vm.step),callback:function ($$v) {_vm.step=$$v},expression:\"step\"}}),_c('p',[_vm._v(\"\\n              Preis ab \"+_vm._s(_vm.step.min)+\" € bis \"+_vm._s(_vm.step.max)+\" €\\n            \")])],1),_c('q-expansion-item',{staticClass:\"filter-expansion\",attrs:{\"default-opened\":\"\"},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('q-item-section',[_vm._v(\"\\n                Reisemittel\\n              \")]),_c('q-item-section',{attrs:{\"side\":\"\"}},[_c('q-icon',{attrs:{\"name\":\"info\"}},[_c('q-tooltip',[_vm._v(\"\\n                    Das Reisemittel auf deiner Reise\\n                  \")])],1)],1)]},proxy:true}])},_vm._l((_vm.tripKind),function(kind){return _c('q-checkbox',{key:kind,attrs:{\"label\":kind,\"val\":kind,\"color\":\"dark-orange\"},on:{\"input\":function($event){return _vm.filterRoundtrips()}},model:{value:(_vm.filteredTripKinds),callback:function ($$v) {_vm.filteredTripKinds=$$v},expression:\"filteredTripKinds\"}})}),1),_c('q-expansion-item',{staticClass:\"filter-expansion\",attrs:{\"default-opened\":\"\"},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('q-item-section',[_vm._v(\"\\n                Highlights\\n              \")]),_c('q-item-section',{attrs:{\"side\":\"\"}},[_c('q-icon',{attrs:{\"name\":\"info\"}},[_c('q-tooltip',[_vm._v(\"\\n                    Die Highlights deiner Reise\\n                  \")])],1)],1)]},proxy:true}])},_vm._l((_vm.roundtripAttr),function(attr,index){return _c('q-checkbox',{key:index,attrs:{\"label\":attr,\"val\":attr,\"color\":\"dark-orange\"},on:{\"input\":function($event){return _vm.filterRoundtrips()}},model:{value:(_vm.filteredRoundtripAttr),callback:function ($$v) {_vm.filteredRoundtripAttr=$$v},expression:\"filteredRoundtripAttr\"}})}),1),_c('q-expansion-item',{staticClass:\"filter-expansion\",attrs:{\"default-opened\":\"\"},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('q-item-section',[_vm._v(\"\\n                Reisekategorie\\n              \")]),_c('q-item-section',{attrs:{\"side\":\"\"}},[_c('q-icon',{attrs:{\"name\":\"info\"}},[_c('q-tooltip',[_vm._v(\"\\n                    Die Kategorie der Reise\\n                  \")])],1)],1)]},proxy:true}])},_vm._l((_vm.roundtripCategories),function(category){return _c('q-checkbox',{key:category,attrs:{\"label\":category,\"val\":category,\"color\":\"dark-orange\"},on:{\"input\":function($event){return _vm.filterRoundtrips()}},model:{value:(_vm.filteredRoundtripCategories),callback:function ($$v) {_vm.filteredRoundtripCategories=$$v},expression:\"filteredRoundtripCategories\"}})}),1)],1)],1)]),_c('div',{staticClass:\"roundtrip-cards-container\",staticStyle:{\"position\":\"relative\"}},[_c('q-inner-loading',{attrs:{\"showing\":_vm.visible}},[_c('q-spinner',{attrs:{\"size\":\"50px\",\"color\":\"primary\"}})],1),(!_vm.visible && _vm.roundtripCount === 0)?_c('div',{staticClass:\"roundtrip-card-container\"},[_c('router-link',{staticClass:\"roundtrip-card\",attrs:{\"to\":_vm.user ? { path: '/meine-rundreisen'} : { path: '/login'}}},[_c('div',{staticClass:\"card-center-col\",staticStyle:{\"justify-content\":\"flex-start\",\"width\":\"auto\"}},[_c('div',{staticClass:\"card-row\"},[_c('div',{staticClass:\"no-rt-title flex\"},[_c('q-icon',{attrs:{\"name\":\"warning\"}}),_c('span',[_vm._v(\"Es wurden leider keine Rundreisen für \"+_vm._s(_vm.selectedCountry)+\" gefunden\")])],1)]),_c('div',{staticClass:\"card-row\"},[_c('span',{staticStyle:{\"font-size\":\"18px\",\"padding-top\":\"35px\"}},[_vm._v(\"Aber das macht nichts, ertelle einfach selbst deine eigene Rundreise für \"+_vm._s(_vm.selectedCountry))])])]),_c('div',{staticClass:\"card-right-col\",staticStyle:{\"width\":\"auto\",\"justify-content\":\"flex-end\",\"min-width\":\"190px\"}},[_c('div',{staticClass:\"card-bottom-row\"},[_c('router-link',{staticClass:\"button details-button\",attrs:{\"to\":_vm.user ? { path: '/meine-rundreisen'} : { path: '/login'}}},[_vm._v(\"Jetzt erstellen\")])],1)])])],1):_vm._e(),_vm._l((_vm.roundtrips),function(roundtrip){return _c('div',{key:roundtrip.RTId,staticClass:\"roundtrip-card-container\"},[_c('router-link',{staticClass:\"roundtrip-card\",attrs:{\"to\":{ path: '/rundreise-ansehen/' + roundtrip.RTId + '&' + _vm.getParamsDate(_vm.OfferPeriod)}}},[_c('div',{staticClass:\"card-left-col\"},[_c('q-img',{staticClass:\"card-image\",attrs:{\"alt\":'Titelbild der Rundreise ' + roundtrip.Title,\"src\":_vm.TitleImgs[_vm.RTIds.indexOf(roundtrip.RTId)]}})],1),_c('div',{staticClass:\"card-center-col\"},[_c('div',{staticClass:\"card-row\",staticStyle:{\"height\":\"50px\"}},[_c('span',{staticClass:\"card-category\",staticStyle:{\"font-size\":\"13px\"}},[_vm._v(_vm._s(roundtrip.Category))]),_c('h2',{staticClass:\"country-title\"},[_vm._v(_vm._s(roundtrip.Title))])]),_c('div',{staticClass:\"card-row\"},[_c('q-rating',{staticClass:\"stars\",attrs:{\"size\":\"15px\",\"color\":\"gold\",\"readonly\":\"\"},model:{value:(roundtrip.Stars),callback:function ($$v) {_vm.$set(roundtrip, \"Stars\", $$v)},expression:\"roundtrip.Stars\"}}),_c('q-icon',{staticClass:\"card-icon\",attrs:{\"name\":\"location_on\"}}),_c('span',{staticClass:\"country-title\"},[_vm._v(_vm._s(Array.isArray(roundtrip.Location) ? _vm.getLocationString(roundtrip.Location): roundtrip.Location)+_vm._s(roundtrip.Region && typeof roundtrip.Region !== 'undefined' ? ', ' + roundtrip.Region : null))])],1),_c('div',{staticClass:\"card-row\"},[_c('q-icon',{staticClass:\"card-icon\",attrs:{\"name\":\"commute\"}}),_c('span',[_vm._v(_vm._s(roundtrip.Profile))])],1),_c('div',{staticClass:\"card-row\"},[_c('span',{staticClass:\"card-days\"},[_vm._v(_vm._s(roundtrip.Days)+\",\")]),_c('span',{staticClass:\"card-hotels\"},[_vm._v(_vm._s(roundtrip.Hotels)+\" Hotel\"+_vm._s(roundtrip.Hotels==1?null:'s'))])]),_c('div',{staticClass:\"card-row description\"},[_c('p',{staticClass:\"card-description\"},[_vm._v(_vm._s(roundtrip.Description))])]),_c('div',{staticClass:\"card-bottom-row\",staticStyle:{\"padding-top\":\"5px\"}},[_c('q-chip',[_vm._v(_vm._s(roundtrip.Highlights[0]))]),_c('q-chip',[_vm._v(_vm._s(roundtrip.Highlights[1]))]),_c('q-chip',[_vm._v(_vm._s(roundtrip.Highlights[2]))])],1)]),_c('div',{staticClass:\"card-right-col\"},[_c('div',{staticClass:\"card-row\"},[_c('a',{staticClass:\"button price-button\"},[_c('span',[_vm._v(\"€\")]),_vm._v(_vm._s(roundtrip.Price)),_c('span',[_vm._v(\"p.P.\")]),_c('q-tooltip',[_vm._v(\"Schätzwert des Reisenden, ohne Freizeitgestaltung\")])],1),_c('router-link',{attrs:{\"to\":'/benutzerprofil/' + roundtrip.UserId}},[_c('q-avatar',{staticStyle:{\"width\":\"50px\",\"margin\":\"auto 10px auto 10px\",\"padding-top\":\"0\"},attrs:{\"size\":\"50px\"}},[_c('q-img',{attrs:{\"src\":_vm.userImages[_vm.RTIds.indexOf(roundtrip.RTId)]}}),(_vm.userNames[_vm.RTIds.indexOf(roundtrip.RTId)])?_c('q-tooltip',[_vm._v(\"von \"+_vm._s(_vm.userNames[_vm.RTIds.indexOf(roundtrip.RTId)]))]):_vm._e()],1)],1)],1),_c('div',{staticClass:\"card-bottom-row\"},[_c('router-link',{staticClass:\"button details-button\",attrs:{\"to\":{ path: '/rundreise-ansehen/' + roundtrip.RTId + '&' + _vm.getParamsDate(_vm.OfferPeriod)}}},[_vm._v(\"Details\")])],1)])])],1)}),_vm._m(0),_c('div',{staticClass:\"flex justify-center\",staticStyle:{\"padding-bottom\":\"15px\"}},[(_vm.paginationMax > 1)?_c('q-pagination',{staticClass:\"pagination\",attrs:{\"color\":\"primary\",\"max\":_vm.paginationMax,\"max-pages\":6,\"boundary-numbers\":true},on:{\"input\":function($event){return _vm.getRoundtrips(false)}},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}}):_vm._e()],1)],2)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ins',{staticClass:\"bookingaff\",attrs:{\"data-aid\":\"1931644\",\"data-target_aid\":\"1931644\",\"data-prod\":\"banner\",\"data-width\":\"728\",\"data-height\":\"90\",\"data-lang\":\"de\"}},[_c('a',{attrs:{\"href\":\"//www.booking.com?aid=1931644\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"roundtrips\">\r\n    <div class=\"topic flex justify-center\">\r\n      <div style=\"display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\">\r\n        <router-link\r\n          to=\"/rundreisen-uebersicht\"\r\n          style=\"text-decoration:none;\"\r\n        >\r\n          <q-icon name=\"keyboard_arrow_left\"></q-icon>\r\n          zurück zu allen Ländern\r\n        </router-link>\r\n      </div>\r\n      <h2>{{selectedCountry}}: {{roundtripCount}} Rundreise{{ roundtripCount === 1 ? null : 'n'}} gefunden</h2>\r\n      <q-select\r\n        outlined\r\n        v-model=\"sort\"\r\n        input-debounce=\"0\"\r\n        :options=\"sortOptions\"\r\n        label=\"Sortieren\"\r\n        style=\"padding:0 10px 0 0\"\r\n        @input=\"sortRoundtrips($event)\"\r\n      >\r\n        <template v-slot:prepend>\r\n          <q-icon name=\"search\" />\r\n        </template>\r\n      </q-select>\r\n    </div>\r\n    <div id=\"CardBackgroundImg\"></div>\r\n    <div id=\"RoundtripCardBackgroundImgPlaceholder\">\r\n      <div class=\"filter-container\">\r\n        <div class=\"filter-card\">\r\n          <h2>Suche</h2>\r\n          <q-select\r\n            outlined\r\n            v-model=\"country\"\r\n            use-input\r\n            hide-selected\r\n            fill-input\r\n            input-debounce=\"0\"\r\n            :options=\"countryOptions\"\r\n            label=\"Land auswählen\"\r\n            @filter=\"filterFn\"\r\n            :rules=\"[val => val !== null && val !== '' || 'Bitte wähle ein Land']\"\r\n          >\r\n            <template v-slot:prepend>\r\n              <q-icon name=\"explore\" />\r\n            </template>\r\n            <template v-slot:no-option>\r\n              <q-item>\r\n                <q-item-section class=\"text-grey\">\r\n                  Keine Ergebnisse\r\n                </q-item-section>\r\n              </q-item>\r\n            </template>\r\n          </q-select>\r\n          <q-input\r\n            outlined\r\n            v-model=\"OfferPeriod\"\r\n            label=\"Zeitraum\"\r\n            class=\"input-item rounded-borders\"\r\n            style=\"padding-bottom:20px;\"\r\n          >\r\n            <q-popup-proxy\r\n              ref=\"qDateProxy\"\r\n              transition-show=\"scale\"\r\n              transition-hide=\"scale\"\r\n            >\r\n              <q-date\r\n                v-model=\"OfferPeriod\"\r\n                today-btn\r\n                mask=\"DD.MM.YYYY\"\r\n                :options=\"dateOptions\"\r\n                @input=\"() => $refs.qDateProxy.hide()\"\r\n              />\r\n            </q-popup-proxy>\r\n            <template v-slot:prepend>\r\n              <q-icon\r\n                name=\"event\"\r\n                class=\"cursor-pointer\"\r\n              >\r\n              </q-icon>\r\n            </template>\r\n          </q-input>\r\n          <q-select\r\n            outlined\r\n            v-model=\"dayModel\"\r\n            :options=\"dayOptions\"\r\n            label=\"Reisedauer\"\r\n            clearable\r\n            class=\"input-item\"\r\n          >\r\n            <template v-slot:prepend>\r\n              <q-icon name=\"access_time\" />\r\n            </template>\r\n          </q-select>\r\n          <a\r\n            class=\"button\"\r\n            @click=\"$router.push('/rundreisen/' + country); getRoundtrips(true); getRTCount()\"\r\n          >Suchen</a>\r\n        </div>\r\n        <div class=\"filter-card\">\r\n          <q-expansion-item\r\n            label=\"Filter\"\r\n            bordered\r\n            v-model=\"isNotMobile\"\r\n            class=\"rounded-borders filter-expansion-label\"\r\n          >\r\n            <q-expansion-item\r\n              label=\"Gesamtpreis pro Person\"\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <q-range\r\n                v-model=\"step\"\r\n                :min=\"0\"\r\n                :max=\"maxPrice\"\r\n                :step=\"10\"\r\n                :left-label-value=\"step.min + ' €'\"\r\n                :right-label-value=\"step.max + ' €'\"\r\n                label\r\n                color=\"deep-orange\"\r\n                @input=\"filterRoundtrips()\"\r\n              />\r\n              <p>\r\n                Preis ab {{ step.min }} € bis {{ step.max }} €\r\n              </p>\r\n            </q-expansion-item>\r\n            <!--<q-expansion-item\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <template v-slot:header>\r\n                <q-item-section>\r\n                  Region\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-icon name=\"info\">\r\n                    <q-tooltip>\r\n                      Die Region in der deine Reise stattfindet\r\n                    </q-tooltip>\r\n                  </q-icon>\r\n                </q-item-section>\r\n              </template>\r\n               <q-checkbox\r\n                v-for=\"region in tripKind\"\r\n                :key=\"kind\"\r\n                :label=\"kind\"\r\n                v-model=\"filteredTripKinds\"\r\n                :val=\"kind\"\r\n                color=\"dark-orange\"\r\n                @input=\"filterRoundtrips()\"\r\n              />\r\n            </q-expansion-item>-->\r\n            <q-expansion-item\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <template v-slot:header>\r\n                <q-item-section>\r\n                  Reisemittel\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-icon name=\"info\">\r\n                    <q-tooltip>\r\n                      Das Reisemittel auf deiner Reise\r\n                    </q-tooltip>\r\n                  </q-icon>\r\n                </q-item-section>\r\n              </template>\r\n              <q-checkbox\r\n                v-for=\"kind in tripKind\"\r\n                :key=\"kind\"\r\n                :label=\"kind\"\r\n                v-model=\"filteredTripKinds\"\r\n                :val=\"kind\"\r\n                color=\"dark-orange\"\r\n                @input=\"filterRoundtrips()\"\r\n              />\r\n            </q-expansion-item>\r\n            <q-expansion-item\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <template v-slot:header>\r\n                <q-item-section>\r\n                  Highlights\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-icon name=\"info\">\r\n                    <q-tooltip>\r\n                      Die Highlights deiner Reise\r\n                    </q-tooltip>\r\n                  </q-icon>\r\n                </q-item-section>\r\n              </template>\r\n              <q-checkbox\r\n                v-for=\"(attr, index) in roundtripAttr\"\r\n                :key=\"index\"\r\n                :label=\"attr\"\r\n                v-model=\"filteredRoundtripAttr\"\r\n                :val=\"attr\"\r\n                color=\"dark-orange\"\r\n                @input=\"filterRoundtrips()\"\r\n              />\r\n            </q-expansion-item>\r\n            <q-expansion-item\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <template v-slot:header>\r\n                <q-item-section>\r\n                  Reisekategorie\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-icon name=\"info\">\r\n                    <q-tooltip>\r\n                      Die Kategorie der Reise\r\n                    </q-tooltip>\r\n                  </q-icon>\r\n                </q-item-section>\r\n              </template>\r\n              <q-checkbox\r\n                v-for=\"category in roundtripCategories\"\r\n                :key=\"category\"\r\n                :label=\"category\"\r\n                v-model=\"filteredRoundtripCategories\"\r\n                :val=\"category\"\r\n                color=\"dark-orange\"\r\n                @input=\"filterRoundtrips()\"\r\n              />\r\n            </q-expansion-item>\r\n            <!--<q-expansion-item\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <template v-slot:header>\r\n                <q-item-section>\r\n                  Sehenswürdigkeiten\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-icon name=\"info\">\r\n                    <q-tooltip>\r\n                      Die Sehenswürdigkeiten auf deiner Reise\r\n                    </q-tooltip>\r\n                  </q-icon>\r\n                </q-item-section>\r\n              </template>\r\n              <q-checkbox\r\n                label=\"Gruppenreise\"\r\n                v-model=\"orange\"\r\n                color=\"dark-orange\"\r\n              />\r\n              <q-checkbox\r\n                label=\"Gruppenreise\"\r\n                v-model=\"orange\"\r\n                color=\"dark-orange\"\r\n              />\r\n            </q-expansion-item>\r\n            <q-expansion-item\r\n              class=\"filter-expansion\"\r\n              default-opened\r\n            >\r\n              <template v-slot:header>\r\n                <q-item-section>\r\n                  Veranstalter\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-icon name=\"info\">\r\n                    <q-tooltip>\r\n                      Der Veranstalter für deine Reise\r\n                    </q-tooltip>\r\n                  </q-icon>\r\n                </q-item-section>\r\n              </template>\r\n              <q-checkbox\r\n                label=\"Gruppenreise\"\r\n                v-model=\"orange\"\r\n                color=\"dark-orange\"\r\n              />\r\n              <q-checkbox\r\n                label=\"Gruppenreise\"\r\n                v-model=\"orange\"\r\n                color=\"dark-orange\"\r\n              />\r\n            </q-expansion-item>-->\r\n          </q-expansion-item>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"roundtrip-cards-container\"\r\n        style=\"position: relative;\"\r\n      >\r\n        <q-inner-loading :showing=\"visible\">\r\n          <q-spinner\r\n            size=\"50px\"\r\n            color=\"primary\"\r\n          />\r\n        </q-inner-loading>\r\n        <div\r\n          class=\"roundtrip-card-container\"\r\n          v-if=\"!visible && roundtripCount === 0\"\r\n        >\r\n          <router-link\r\n            class=\"roundtrip-card\"\r\n            :to=\"user ? { path: '/meine-rundreisen'} : { path: '/login'}\"\r\n          >\r\n            <div\r\n              class=\"card-center-col\"\r\n              style=\"justify-content:flex-start; width:auto;\"\r\n            >\r\n              <div class=\"card-row\">\r\n                <div class=\"no-rt-title flex\">\r\n                  <q-icon name=\"warning\" />\r\n                  <span>Es wurden leider keine Rundreisen für {{selectedCountry}} gefunden</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-row\">\r\n                <span style=\"font-size:18px; padding-top:35px;\">Aber das macht nichts, ertelle einfach selbst deine eigene Rundreise für {{selectedCountry}}</span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"card-right-col\"\r\n              style=\"width:auto; justify-content:flex-end; min-width:190px;\"\r\n            >\r\n              <div class=\"card-bottom-row\">\r\n                <router-link\r\n                  class=\"button details-button\"\r\n                  :to=\"user ? { path: '/meine-rundreisen'} : { path: '/login'}\"\r\n                >Jetzt erstellen</router-link>\r\n              </div>\r\n            </div>\r\n          </router-link>\r\n        </div>\r\n        <div\r\n          class=\"roundtrip-card-container\"\r\n          v-for=\"roundtrip in roundtrips\"\r\n          :key=\"roundtrip.RTId\"\r\n        >\r\n          <!-- <div\r\n            class=\"edit-btn-container\"\r\n            v-if=\"user === null || user.uid !== roundtrip.UserId\"\r\n          >\r\n            <q-btn\r\n              round\r\n              color=\"primary\"\r\n              icon=\"edit\"\r\n              @click=\"user ? editRTDialog = true : $router.push('/login')\"\r\n            >\r\n              <q-tooltip>Diese Rundreise bearbeiten</q-tooltip>\r\n            </q-btn>\r\n            <q-dialog\r\n              v-model=\"editRTDialog\"\r\n              persistent\r\n            >\r\n              <q-card style=\"min-width: 350px\">\r\n                <q-card-section>\r\n                  <div class=\"text-h6\">Rundreise bearbeiten</div>\r\n                  <span>Diese Rundreise wird zu deinen eigenen Reisen hinzugefügt, damit du sie bearbeiten kannst. Bitte gib dafür den Titel der Rundreise ein.</span>\r\n                </q-card-section>\r\n\r\n                <q-card-section>\r\n                  <q-input\r\n                    v-model=\"title\"\r\n                    autofocus\r\n                    outlined\r\n                    @input=\"checkDisableEditBtn($event)\"\r\n                    :rules=\"[val => val !== null &&  val !== ''  || 'Bitte gib einen Titel an', val => sharedMethods.isUniqueTitle(val), val => val[0] !== ' ' || 'Das erste Zeichen kann kein Leerzeichen sein']\"\r\n                    label=\"Titel der Rundreise\"\r\n                    style=\"text-transform:capitalize;\"\r\n                  />\r\n                </q-card-section>\r\n\r\n                <q-card-actions\r\n                  align=\"right\"\r\n                  class=\"text-primary\"\r\n                >\r\n                  <q-btn\r\n                    label=\"Abbrechen\"\r\n                    v-close-popup\r\n                    flat\r\n                  />\r\n                  <q-btn\r\n                    type=\"submit\"\r\n                    label=\"Rundreise bearbeiten\"\r\n                    flat\r\n                    v-close-popup\r\n                    :disable=\"disableEditBtn\"\r\n                    @click=\" $router.push('/rundreise-ansehen/' + roundtrip.RTId +'&' + title)\"\r\n                  />\r\n                </q-card-actions>\r\n              </q-card>\r\n            </q-dialog>\r\n          </div> -->\r\n          <router-link\r\n            class=\"roundtrip-card\"\r\n            :to=\"{ path: '/rundreise-ansehen/' + roundtrip.RTId + '&' + getParamsDate(OfferPeriod)}\"\r\n          >\r\n            <div class=\"card-left-col\">\r\n              <q-img\r\n                :alt=\"'Titelbild der Rundreise ' + roundtrip.Title\"\r\n                class=\"card-image\"\r\n                :src=\"TitleImgs[RTIds.indexOf(roundtrip.RTId)]\"\r\n              ></q-img>\r\n            </div>\r\n            <div class=\"card-center-col\">\r\n              <div\r\n                class=\"card-row\"\r\n                style=\"height: 50px;\"\r\n              >\r\n                <span\r\n                  class=\"card-category\"\r\n                  style=\"font-size:13px;\"\r\n                >{{roundtrip.Category}}</span>\r\n                <h2 class=\"country-title\">{{roundtrip.Title}}</h2>\r\n              </div>\r\n              <div class=\"card-row\">\r\n                <q-rating\r\n                  class=\"stars\"\r\n                  v-model=\"roundtrip.Stars\"\r\n                  size=\"15px\"\r\n                  color=\"gold\"\r\n                  readonly\r\n                />\r\n                <q-icon\r\n                  name=\"location_on\"\r\n                  class=\"card-icon\"\r\n                >\r\n                </q-icon>\r\n                <span class=\"country-title\">{{Array.isArray(roundtrip.Location) ? getLocationString(roundtrip.Location): roundtrip.Location}}{{ roundtrip.Region && typeof roundtrip.Region !== 'undefined' ? ', ' + roundtrip.Region : null}}</span>\r\n              </div>\r\n              <div class=\"card-row\">\r\n                <q-icon\r\n                  class=\"card-icon\"\r\n                  name=\"commute\"\r\n                ></q-icon>\r\n                <span>{{roundtrip.Profile}}</span>\r\n              </div>\r\n              <div class=\"card-row\">\r\n                <span class=\"card-days\">{{roundtrip.Days}},</span>\r\n                <span class=\"card-hotels\">{{roundtrip.Hotels}} Hotel{{roundtrip.Hotels==1?null:'s'}}</span>\r\n              </div>\r\n              <div class=\"card-row description\">\r\n                <p class=\"card-description\">{{roundtrip.Description}}</p>\r\n              </div>\r\n              <div\r\n                class=\"card-bottom-row\"\r\n                style=\"padding-top:5px;\"\r\n              >\r\n                <q-chip>{{roundtrip.Highlights[0]}}</q-chip>\r\n                <q-chip>{{roundtrip.Highlights[1]}}</q-chip>\r\n                <q-chip>{{roundtrip.Highlights[2]}}</q-chip>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-right-col\">\r\n              <div class=\"card-row\">\r\n                <a class=\"button price-button\">\r\n                  <span>&euro;</span>{{roundtrip.Price}}<span>p.P.</span>\r\n                  <q-tooltip>Schätzwert des Reisenden, ohne Freizeitgestaltung</q-tooltip>\r\n                </a>\r\n                <router-link :to=\"'/benutzerprofil/' + roundtrip.UserId\">\r\n                  <q-avatar\r\n                    size=\"50px\"\r\n                    style=\"width: 50px; margin:auto 10px auto 10px; padding-top:0;\"\r\n                  >\r\n                    <q-img :src=\"userImages[RTIds.indexOf(roundtrip.RTId)]\"></q-img>\r\n                    <q-tooltip v-if=\"userNames[RTIds.indexOf(roundtrip.RTId)]\">von {{userNames[RTIds.indexOf(roundtrip.RTId)]}}</q-tooltip>\r\n                  </q-avatar>\r\n                </router-link>\r\n              </div>\r\n              <div class=\"card-bottom-row\">\r\n                <router-link\r\n                  class=\"button details-button\"\r\n                  :to=\"{ path: '/rundreise-ansehen/' + roundtrip.RTId + '&' + getParamsDate(OfferPeriod)}\"\r\n                >Details</router-link>\r\n                <!--<a class=\"button price-button\"><span>&euro;</span>{{roundtrip.Price}}<span>p.P.</span></a>-->\r\n              </div>\r\n            </div>\r\n          </router-link>\r\n        </div>\r\n        <ins\r\n          class=\"bookingaff\"\r\n          data-aid=\"1931644\"\r\n          data-target_aid=\"1931644\"\r\n          data-prod=\"banner\"\r\n          data-width=\"728\"\r\n          data-height=\"90\"\r\n          data-lang=\"de\"\r\n        >\r\n          <!-- Anything inside will go away once widget is loaded. -->\r\n          <a href=\"//www.booking.com?aid=1931644\"></a>\r\n        </ins>\r\n        <div\r\n          class=\"flex justify-center\"\r\n          style=\"padding-bottom:15px;\"\r\n        >\r\n          <q-pagination\r\n            class=\"pagination\"\r\n            v-if=\"paginationMax > 1\"\r\n            v-model=\"currentPage\"\r\n            color=\"primary\"\r\n            :max=\"paginationMax\"\r\n            :max-pages=\"6\"\r\n            :boundary-numbers=\"true\"\r\n            @input=\"getRoundtrips(false)\"\r\n          >\r\n          </q-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport(/* webpackPrefetch: true */ '../css/roundtrips.less')\r\nimport { date } from 'quasar'\r\nimport { db, storage } from '../firebaseInit.js'\r\nimport { countries } from '../countries'\r\nimport sharedMethods from '../sharedMethods.js'\r\n\r\nlet timeStamp = Date.now()\r\nlet formattedDate = date.formatDate(timeStamp, 'DD.MM.YYYY')\r\n\r\nlet roundtripArr = []\r\n\r\nconst originalRoundtripArr = []\r\nlet createdAts = []\r\n\r\nexport default {\r\n  meta () {\r\n    return {\r\n      title: 'Reisen für ' + this.$route.params.country,\r\n      meta: {\r\n        description: { name: 'description', content: 'Rundreise ' + this.$route.params.country + '. Routen und Tipps zu ' + this.$route.params.country + ' auf Roundtrips4you, dein Reiseplaner und Routenplaner' }\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      OfferPeriod: formattedDate,\r\n      country: this.$route.params.country,\r\n      selectedCountry: '',\r\n      dayModel: null,\r\n      orange: false,\r\n      visible: false,\r\n      showSimulatedReturnData: false,\r\n      dayOptions: [\r\n        '< 5 Tage', '5-8 Tage', '9-11 Tage', '12-15 Tage', '> 15 Tage'\r\n      ],\r\n      step: {\r\n        min: 0,\r\n        max: 330\r\n      },\r\n      filteredRoundtripAttr: [],\r\n      roundtripAttr: [],\r\n      filteredTripKinds: [],\r\n      tripKind: [],\r\n      roundtripCategories: [],\r\n      filteredRoundtripCategories: [],\r\n      roundtrips: [],\r\n      countryOptions: countries,\r\n      filterRoundtripArr: [],\r\n      TitleImgs: [],\r\n      RTIds: [],\r\n      maxPrice: 0,\r\n      currentPage: 1,\r\n      paginationMax: 1,\r\n      roundtripCount: 0,\r\n      sort: 'Erstellungsdatum',\r\n      sortOptions: [\r\n        'Preis aufsteigend', 'Preis absteigend', 'Hotelbewertung aufsteigend', 'Hotelbewertung absteigend', 'Erstellungsdatum'\r\n      ],\r\n      // 'Reisedauer aufsteigend', 'Reisedauer absteigend' missing in sort opt\r\n      title: null,\r\n      editRTDialog: false,\r\n      disableEditBtn: true,\r\n      userImages: [],\r\n      userNames: []\r\n    }\r\n  },\r\n  name: 'Roundtrips',\r\n  computed: {\r\n    user () {\r\n      return this.$store.getters['user/user']\r\n    },\r\n    isNotMobile () {\r\n      return !window.matchMedia('(max-width: 550px)').matches\r\n    }\r\n  },\r\n  methods: {\r\n    filterFn (val, update, abort) {\r\n      update(() => {\r\n        const needle = val.toLowerCase()\r\n        this.countryOptions = countries.filter(v => v.toLowerCase().indexOf(needle) > -1)\r\n      })\r\n    },\r\n    dateOptions (date) {\r\n      const dateTimeParts = formattedDate.split(' ')\r\n      const dateParts = dateTimeParts[0].split('.')\r\n      const compareDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0])\r\n      const currentDate = new Date(date)\r\n\r\n      return currentDate >= compareDate\r\n    },\r\n    checkDisableEditBtn (val) {\r\n      sharedMethods.isUniqueTitle(val).then(uniqueTitle => {\r\n        if (uniqueTitle === 'Dieser Titel ist bereits vergeben') uniqueTitle = false\r\n        this.disableEditBtn = val === null || val === '' || !uniqueTitle\r\n      })\r\n    },\r\n    filterRoundtrips () {\r\n      this.filterRoundtripArr = []\r\n      this.roundtrips = []\r\n\r\n      this.selectedCountry = this.country\r\n      this.visible = true\r\n      this.showSimulatedReturnData = false\r\n      originalRoundtripArr.length = 0\r\n\r\n      let dateParts = this.OfferPeriod.split('.')\r\n      let offerPeriod = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], '00', '00', '00')\r\n\r\n      let searchCreatedAt = createdAts[this.currentPage * 20 - 20]\r\n      if (typeof searchCreatedAt === 'undefined' || searchCreatedAt === null) searchCreatedAt = 0\r\n\r\n      let roundtripsRef = db.collection('Roundtrips')\r\n        .where('Location', 'array-contains', this.country)\r\n        .where('Public', '==', true)\r\n\r\n      if (this.dayModel !== null && this.dayModel.length > 0) roundtripsRef = roundtripsRef.where('Days', '==', this.dayModel)\r\n\r\n      if (this.filteredRoundtripAttr.length > 0) roundtripsRef = roundtripsRef.where('Highlights', 'array-contains-any', this.filteredRoundtripAttr)\r\n\r\n      this.filteredTripKinds.forEach(profile => {\r\n        roundtripsRef = roundtripsRef.where('Profile', '==', profile)\r\n      })\r\n\r\n      this.filteredRoundtripCategories.forEach(cat => {\r\n        roundtripsRef = roundtripsRef.where('Category', '==', cat)\r\n      })\r\n\r\n      roundtripsRef = roundtripsRef.orderBy('createdAt')\r\n      roundtripsRef = roundtripsRef.startAt(searchCreatedAt).limit(20)\r\n\r\n      roundtripsRef.get()\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            if (doc.data().OfferWholeYear || (this.OfferPeriod !== null && this.OfferPeriod.length > 0 && doc.data().OfferStartPeriod.seconds * 1000 <= offerPeriod.getTime() && doc.data().OfferEndPeriod.seconds * 1000 >= offerPeriod.getTime())) {\r\n              let roundtrip = doc.data()\r\n              let isInPriceRange = this.step.max >= Number(roundtrip.Price) && this.step.min <= Number(roundtrip.Price)\r\n              let isInFilter = this.includesArray(roundtrip.Highlights, this.filteredRoundtripAttr)\r\n\r\n              if (isInFilter && isInPriceRange) this.filterRoundtripArr.push(roundtrip)\r\n            }\r\n          })\r\n\r\n          this.roundtrips = []\r\n          this.roundtrips = this.roundtrips.concat(this.filterRoundtripArr)\r\n          this.roundtripCount = this.roundtrips.length\r\n\r\n          this.visible = false\r\n          this.showSimulatedReturnData = true\r\n        })\r\n    },\r\n    includesArray (array1, array2) {\r\n      if (array1.lenght === 0 || array2.length === 0) return true\r\n      let returnVal = true\r\n      array2.forEach(element => {\r\n        if (!array1.includes(element)) returnVal = false\r\n      })\r\n      return returnVal\r\n    },\r\n    removeRoundtrip (roundtrip) {\r\n      this.filterRoundtripArr.splice(this.filterRoundtripArr.indexOf(roundtrip), 1)\r\n    },\r\n    loadUserData (UserId) {\r\n      let users = []\r\n      let context = this\r\n      let userRef = db.collection('User')\r\n        .where('UserUID', '==', UserId)\r\n        .limit(1)\r\n      userRef.get()\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            users.push(doc.data())\r\n            context.userNames.push(users[0].UserName)\r\n            context.userImages.push(users[0].UserImage)\r\n          })\r\n        })\r\n    },\r\n    loadTitleImg (docId, RTId) {\r\n      let context = this\r\n      storage.ref().child('Images/Roundtrips/' + docId + '/Title/titleImg').getDownloadURL().then(function (url) {\r\n        context.TitleImgs.push(url)\r\n        context.RTIds.push(RTId)\r\n      })\r\n    },\r\n    getRoundtrips (initialLoad) {\r\n      this.selectedCountry = this.country\r\n      this.visible = true\r\n      this.showSimulatedReturnData = false\r\n      roundtripArr = []\r\n      originalRoundtripArr.length = 0\r\n\r\n      let dateParts = this.OfferPeriod.split('.')\r\n      let offerPeriod = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], '00', '00', '00')\r\n\r\n      let searchCreatedAt = createdAts[(this.currentPage * 20) - 20]\r\n      if (typeof searchCreatedAt === 'undefined' || searchCreatedAt === null) searchCreatedAt = 0\r\n\r\n      if (initialLoad) {\r\n        searchCreatedAt = 0\r\n      }\r\n\r\n      let roundtripsRef = db.collection('Roundtrips')\r\n        .where('Location', 'array-contains', this.country)\r\n        .where('Public', '==', true)\r\n        .orderBy('createdAt')\r\n        .startAt(searchCreatedAt)\r\n        .limit(20)\r\n\r\n      if (this.dayModel !== null && this.dayModel.length > 0) {\r\n        roundtripsRef = db.collection('Roundtrips')\r\n          .where('Location', 'array-contains', this.country)\r\n          .where('Public', '==', true)\r\n          .where('Days', '==', this.dayModel)\r\n          .orderBy('createdAt')\r\n          .startAt(searchCreatedAt)\r\n          .limit(20)\r\n      }\r\n\r\n      // reset filer\r\n      this.filteredRoundtripAttr = []\r\n      this.filteredTripKinds = []\r\n      this.filteredRoundtripCategories = []\r\n\r\n      // filter vars\r\n      let price = 0\r\n      let tripKind = []\r\n      let roundtripAttr = []\r\n      let category = []\r\n\r\n      roundtripsRef.get()\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            if (doc.data().OfferWholeYear || (this.OfferPeriod !== null && this.OfferPeriod.length > 0 && doc.data().OfferStartPeriod.seconds * 1000 <= offerPeriod.getTime() && doc.data().OfferEndPeriod.seconds * 1000 >= offerPeriod.getTime())) {\r\n              originalRoundtripArr.push(doc.data())\r\n              originalRoundtripArr.reverse()\r\n              this.loadTitleImg(doc.id, doc.data().RTId)\r\n\r\n              // load user data\r\n              this.loadUserData(doc.data().UserId)\r\n\r\n              roundtripArr.push(doc.data())\r\n              roundtripArr.reverse()\r\n            }\r\n          })\r\n\r\n          // read all posible values for filter\r\n          roundtripArr.forEach((roundtrip, index) => {\r\n            if (price < parseInt(roundtrip.Price)) price = parseInt(roundtrip.Price)\r\n            if (!tripKind.includes(roundtrip.Profile)) tripKind.push(roundtrip.Profile)\r\n            if (!roundtripAttr.includes(roundtrip.Highlights[1])) roundtripAttr.push(roundtrip.Highlights[0])\r\n            if (!roundtripAttr.includes(roundtrip.Highlights[1])) roundtripAttr.push(roundtrip.Highlights[1])\r\n            if (!roundtripAttr.includes(roundtrip.Highlights[2])) roundtripAttr.push(roundtrip.Highlights[2])\r\n            if (!category.includes(roundtrip.Category)) category.push(roundtrip.Category)\r\n          })\r\n\r\n          this.roundtrips = roundtripArr\r\n          this.step.max = price\r\n          this.maxPrice = price\r\n\r\n          this.tripKind = tripKind\r\n          this.roundtripAttr = roundtripAttr\r\n          this.roundtripCategories = category\r\n\r\n          this.visible = false\r\n          this.showSimulatedReturnData = true\r\n        })\r\n        .catch(err => {\r\n          console.log('Error getting Roundtrips', err)\r\n          this.$q.notify({\r\n            color: 'red-5',\r\n            textColor: 'white',\r\n            icon: 'error',\r\n            message: 'Es ist ein Fehler aufgetreten, bitte versuche es erneut'\r\n          })\r\n        })\r\n    },\r\n    getParamsDate (dateString) {\r\n      let dateParts = dateString.split('.')\r\n      return new Date(dateParts[2], dateParts[1] - 1, dateParts[0], '00', '00', '00').getTime()\r\n    },\r\n    getRTCount () {\r\n      const counterRef = db.collection('Roundtrips')\r\n        .where('Location', 'array-contains', this.country)\r\n        .where('Public', '==', true)\r\n        .orderBy('createdAt')\r\n\r\n      this.roundtripCount = 0\r\n\r\n      counterRef.get().then(snapshot => {\r\n        this.paginationMax = Math.ceil(snapshot.docs.length / 20)\r\n        snapshot.forEach(doc => {\r\n          this.roundtripCount++\r\n          createdAts.push(doc.data().createdAt)\r\n        })\r\n      })\r\n    },\r\n    sortRoundtrips (value) {\r\n      switch (value) {\r\n        case 'Preis aufsteigend':\r\n          this.roundtrips.sort((a, b) => parseFloat(a.Price) - parseFloat(b.Price))\r\n          break\r\n        case 'Preis absteigend':\r\n          this.roundtrips.sort((a, b) => parseFloat(b.Price) - parseFloat(a.Price))\r\n          break\r\n        case 'Hotelbewertung aufsteigend':\r\n          this.roundtrips.sort((a, b) => parseFloat(a.Stars) - parseFloat(b.Stars))\r\n          break\r\n        case 'Hotelbewertung absteigend':\r\n          this.roundtrips.sort((a, b) => parseFloat(b.Stars) - parseFloat(a.Stars))\r\n          break\r\n        case 'Reisedauer aufsteigend':\r\n          this.roundtrips.sort((a, b) => parseFloat(a.Days) - parseFloat(b.Days))\r\n          break\r\n        case 'Reisedauer absteigend':\r\n          this.roundtrips.sort((a, b) => parseFloat(b.Days) - parseFloat(a.Days))\r\n          break\r\n        case 'Erstellungsdatum':\r\n          this.roundtrips = []\r\n          this.roundtrips = this.roundtrips.concat(originalRoundtripArr)\r\n          break\r\n      }\r\n    },\r\n    getLocationString (locations) {\r\n      let locationString = ''\r\n      locations.forEach((location, index) => {\r\n        locationString = locationString + (index !== 0 ? ', ' : '') + location\r\n      })\r\n      return locationString\r\n    },\r\n    loadBookingComWidget () {\r\n      (function (d, sc, u) {\r\n        var s = d.createElement(sc), p = d.getElementsByTagName(sc)[0]\r\n        s.type = 'text/javascript'\r\n        s.async = true\r\n        s.src = u + '?v=' + (+new Date())\r\n        p.parentNode.insertBefore(s, p)\r\n      })(document, 'script', '//aff.bstatic.com/static/affiliate_base/js/flexiproduct.js')\r\n    }\r\n  },\r\n  created () {\r\n    this.currentPage = 1\r\n    this.getRoundtrips(true)\r\n    this.getRTCount()\r\n    // this.loadBookingComWidget()\r\n  },\r\n  mounted () {\r\n    // this.loadBookingComWidget()\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Roundtrips.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Roundtrips.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Roundtrips.vue?vue&type=template&id=2f1eede0&\"\nimport script from \"./Roundtrips.vue?vue&type=script&lang=js&\"\nexport * from \"./Roundtrips.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"roundtrip-details q-px-lg q-pb-md\"},[(_vm.user !== null)?_c('div',{staticClass:\"edit-btn-container\",staticStyle:{\"position\":\"fixed\",\"z-index\":\"1\",\"right\":\"0\",\"padding\":\"10px\"}},[(_vm.isUserCreator)?_c('q-btn',{attrs:{\"round\":\"\",\"color\":\"primary\",\"icon\":\"edit\"},on:{\"click\":function($event){return _vm.$router.push('/rundreisen-wizard/' + _vm.RTId)}}},[_c('q-tooltip',[_vm._v(\"Reise bearbeiten\")])],1):_c('q-btn',{attrs:{\"round\":\"\",\"color\":\"primary\",\"icon\":\"content_copy\"},on:{\"click\":function($event){_vm.copyRTDialog = true}}},[_c('q-tooltip',[_vm._v(\"Reise bearbeiten\")])],1),(_vm.isUserCreator)?_c('q-btn',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"round\":\"\",\"color\":\"primary\",\"icon\":\"settings\"},on:{\"click\":function($event){return _vm.$router.push('/rundreisen-einstellungen/' + _vm.RTId)}}},[_c('q-tooltip',[_vm._v(\"Reiseeinstellungen\")])],1):_vm._e(),_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.copyRTDialog),callback:function ($$v) {_vm.copyRTDialog=$$v},expression:\"copyRTDialog\"}},[_c('q-card',{staticStyle:{\"min-width\":\"350px\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"Reise kopieren\")]),_c('span',[_vm._v(\"Diese Reise wird kopiert und zu deinen eigenen Reisen hinzugefügt. \"),_c('br'),_vm._v(\" Bitte gib dafür den neuen Titel der Reise ein.\")])]),_c('q-card-section',[_c('q-input',{staticStyle:{\"text-transform\":\"capitalize\"},attrs:{\"autofocus\":\"\",\"outlined\":\"\",\"rules\":[function (val) { return val !== null &&  val !== ''  || 'Bitte gib einen Titel an'; }, function (val) { return _vm.sharedMethods.isUniqueTitle(val); }, function (val) { return val[0] !== ' ' || 'Das erste Zeichen kann kein Leerzeichen sein'; }],\"label\":\"Titel der Rundreise\"},on:{\"input\":function($event){return _vm.checkDisableEditBtn($event)}},model:{value:(_vm.copyRTTitle),callback:function ($$v) {_vm.copyRTTitle=$$v},expression:\"copyRTTitle\"}})],1),_c('q-card-actions',{staticClass:\"text-primary\",attrs:{\"align\":\"right\"}},[_c('q-btn',{directives:[{name:\"close-popup\",rawName:\"v-close-popup\"}],attrs:{\"label\":\"Abbrechen\",\"flat\":\"\"}}),_c('q-btn',{directives:[{name:\"close-popup\",rawName:\"v-close-popup\"}],attrs:{\"type\":\"submit\",\"label\":\"Rundreise kopieren\",\"flat\":\"\",\"disable\":_vm.disableEditBtn},on:{\"click\":function($event){return _vm.copyRoundtrip()}}})],1)],1)],1)],1):_vm._e(),_c('div',{staticClass:\"back-link\",staticStyle:{\"padding-top\":\"10px\",\"padding-left\":\"10px\"}},[(!_vm.isUserCreator)?_c('a',{staticStyle:{\"text-decoration\":\"none\"},on:{\"click\":function($event){_vm.prevRouteParams && _vm.prevRouteParams.length > 0 ? _vm.$router.go(-1) : _vm.$router.push('/rundreisen/'  + _vm.roundtrip.Location[0])}}},[_c('q-icon',{attrs:{\"name\":\"keyboard_arrow_left\"}}),_vm._v(\"\\n      alle Rundreisen\\n    \")],1):_c('a',{staticStyle:{\"text-decoration\":\"none\"},on:{\"click\":function($event){return _vm.$router.push('/meine-rundreisen')}}},[_c('q-icon',{attrs:{\"name\":\"keyboard_arrow_left\"}}),_vm._v(\"\\n      meine Rundreisen\\n    \")],1)]),_c('q-tabs',{staticClass:\"text-grey\",staticStyle:{\"padding-top\":\"50px\"},attrs:{\"dense\":\"\",\"active-color\":\"primary\",\"indicator-color\":\"primary\",\"align\":\"justify\",\"narrow-indicator\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},[_c('q-tab',{attrs:{\"name\":\"overview\",\"label\":\"Übersicht\"}}),_c('q-tab',{attrs:{\"name\":\"map\",\"label\":\"Karte\"}}),(_vm.roundtrip.Public)?_c('q-tab',{attrs:{\"name\":\"ratings\",\"label\":\"Chat\"}}):_vm._e()],1),_c('q-separator'),_c('q-tab-panels',{ref:\"tabPanels\",attrs:{\"animated\":\"\",\"keep-alive\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},[_c('q-tab-panel',{attrs:{\"name\":\"overview\"}},[_c('q-timeline',{attrs:{\"color\":\"secondary\"}},[_c('q-timeline-entry',{attrs:{\"heading\":\"\"}},[_c('div',{staticClass:\"flex justify-between\"},[_c('span',[_vm._v(_vm._s(_vm.roundtrip ? _vm.roundtrip.Title : 'Reiseverlauf'))]),_c('q-toggle',{staticStyle:{\"font-size\":\"18px\"},attrs:{\"label\":\"Stopps ausklappen\"},on:{\"input\":function($event){return _vm.sharedMethods.expandAllStops(_vm.getContext, _vm.stops)}},model:{value:(_vm.allStopsExpanded),callback:function ($$v) {_vm.allStopsExpanded=$$v},expression:\"allStopsExpanded\"}})],1),_c('div',{staticClass:\"legal-description\"},[(!_vm.creator.companyProfile)?_c('p',[_vm._v(\"Alle Stopps, Hotels, Sehenswürdigkeiten usw. sind von \"+_vm._s(_vm.creator.UserName ? _vm.creator.UserName : ' dem Ersteller dieser Rundreise ')+\" empfohlen.\")]):_vm._e(),(!_vm.creator.companyProfile)?_c('p',[_vm._v(\"Diese Reise dient nur zur Veranschaulichung und Darstellung eines Reisevorschlags.\")]):_vm._e(),(_vm.creator.UserName)?_c('span',[_vm._v(\"Diese Rundreise wurde von \")]):_vm._e(),(_vm.roundtrip)?_c('router-link',{attrs:{\"to\":'/benutzerprofil/' + _vm.roundtrip.UserId}},[_vm._v(\"\\n              \"+_vm._s(_vm.creator.UserName)),_c('q-tooltip',[_c('q-avatar',{staticStyle:{\"width\":\"50px\",\"margin\":\"0\",\"padding\":\"0\"},attrs:{\"size\":\"50px\"}},[_c('q-img',{attrs:{\"src\":_vm.creator.UserImage}})],1)],1)],1):_vm._e(),(_vm.creator.TrustedUser)?_c('q-badge',{staticStyle:{\"border-radius\":\"50%\",\"padding\":\"2px\",\"padding-top\":\"2.5px\",\"margin-left\":\"1px\"},attrs:{\"align\":\"top\",\"color\":\"blue\"}},[_c('q-icon',{attrs:{\"name\":\"done\",\"color\":\"white\",\"size\":\"13px\"}}),_c('q-tooltip',[_vm._v(\"Dies ist ein von Roundtrips4you anerkannter User\")])],1):_vm._e(),(_vm.creator.UserName)?_c('span',[_vm._v(\" erstellt\")]):_vm._e(),_c('br'),(!!_vm.creator.companyProfile && _vm.creator.UserName && _vm.tripWebsite)?_c('q-btn',{staticStyle:{\"margin-top\":\"20px\"},on:{\"click\":function($event){return _vm.openInNewTab(_vm.tripWebsite)}}},[_vm._v(\"Bei \"+_vm._s(_vm.creator.UserName)+\" buchen\")]):_vm._e()],1),_c('div',{staticClass:\"details-desctiption-container\"},[_c('p',[_vm._v(_vm._s(_vm.roundtrip.Description))])])]),(!_vm.stopsLoaded)?[_vm._l((2),function(n){return [_c('q-timeline-entry',{key:n,scopedSlots:_vm._u([{key:\"subtitle\",fn:function(){return [_c('q-skeleton',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"width\":\"300px\",\"height\":\"10px\",\"type\":\"rect\"}})]},proxy:true}],null,true)},[_c('div',{staticClass:\"flex\",staticStyle:{\"margin-bottom\":\"10px\"}},[_c('q-skeleton',{staticStyle:{\"margin-right\":\"10px\"},attrs:{\"width\":\"400px\",\"height\":\"15px\",\"type\":\"rect\"}})],1),_c('q-skeleton',{attrs:{\"width\":\"90%\",\"height\":\"50px\",\"type\":\"rect\"}})],1),_c('q-timeline-entry',{key:'A' + n,attrs:{\"icon\":\"speed\"},scopedSlots:_vm._u([{key:\"subtitle\",fn:function(){return [_c('q-skeleton',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"width\":\"300px\",\"height\":\"10px\",\"type\":\"rect\"}})]},proxy:true}],null,true)},[_c('q-skeleton',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"height\":\"25px\",\"width\":\"60px\",\"type\":\"QChip\"}})],1)]})]:_vm._e(),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.stopsLoaded),expression:\"stopsLoaded\"}],staticClass:\"stop-list\"},[_vm._l((_vm.stops),function(stop,index){return [_c('Stop',{key:stop.DocId,ref:stop.DocId,refInFor:true,class:'stop' + stop.DocId,attrs:{\"title\":stop.Title,\"date\":typeof _vm.stops[index].InitDate === 'string' ? stop.InitDate : _vm.sharedMethods.getStringDateFromTimestamp(stop.InitDate),\"nextStopDate\":_vm.stops[index + 1] ? (typeof _vm.stops[index + 1].InitDate === 'string' ? _vm.stops[index + 1].InitDate : _vm.sharedMethods.getStringDateFromTimestamp(_vm.stops[index + 1].InitDate.seconds)) : null,\"editor-placeholder\":stop.Description,\"editor\":false,\"docId\":stop.DocId,\"general-link\":stop.GeneralLink,\"location\":stop.Location && typeof stop.Location !== 'undefined' && stop.Location ? stop.Location : null,\"parkingPlace\":stop.Parking && typeof stop.Parking !== 'undefined' && stop.Parking ? stop.Parking : null,\"lastItem\":index === _vm.stops.length -1,\"hotelStars\":parseInt(stop.HotelStars),\"hotelName\":stop.HotelName,\"hotelPrice\":stop.HotelPrice,\"guestRating\":stop.GuestRating,\"transportLocations\":stop.TransportLocations,\"hotelLocation\":stop.HotelLocation,\"hotelContact\":stop.HotelContact,\"adults\":parseInt(_vm.adults),\"childrenAges\":_vm.childrenAges,\"rooms\":parseInt(_vm.rooms),\"firstStop\":index === 0,\"galeryImgUrls\":_vm.galeryImgUrls,\"stopImages\":typeof stop.StopImages === 'undefined' ? null : stop.StopImages,\"addedSights\":stop.Sights ? stop.Sights : [],\"days\":_vm.days[_vm.days.findIndex(function (x) { return x.docId === stop.DocId; })] ? _vm.days[_vm.days.findIndex(function (x) { return x.docId === stop.DocId; })].days : null,\"dailyTrips\":stop.DailyTrips ? stop.DailyTrips : [],\"expanded\":stop.expanded,\"profile\":stop.Profile},on:{\"expansionChanged\":function($event){return _vm.sharedMethods.expansionChanged(_vm.getContext, $event)}}}),(index !== _vm.stops.length - 1 && _vm.durations[_vm.durations.findIndex(function (x) { return x.docId === stop.DocId; })] && _vm.durations[_vm.durations.findIndex(function (x) { return x.docId === stop.DocId; })].duration !== null)?_c('Duration',{key:'Stop' + stop.DocId,attrs:{\"duration\":_vm.durations[_vm.durations.findIndex(function (x) { return x.docId === stop.DocId; })].duration + _vm.durations[_vm.durations.findIndex(function (x) { return x.docId === stop.DocId; })].distance,\"defaultProfile\":stop.Profile ? _vm.getStringProfile(stop.Profile) : _vm.inputProfile,\"roundtripProfile\":_vm.inputProfile}}):_vm._e()]})],2)],2),_c('a',{staticClass:\"panel-links\",on:{\"click\":function($event){return _vm.$refs.tabPanels.goTo('map')}}},[_vm._v(\"zur Karte\")])],1),_c('q-tab-panel',{attrs:{\"name\":\"map\"}},[_c('Map',{attrs:{\"profile\":_vm.getProfile(_vm.inputProfile),\"stops\":_vm.stops,\"childrenAges\":_vm.childrenAges,\"adults\":parseInt(_vm.adults),\"rooms\":parseInt(_vm.rooms)}}),_c('br'),_c('a',{on:{\"click\":function($event){return _vm.$refs.tabPanels.goTo('overview')}}},[_vm._v(\"zur Routenübersicht\")])],1),_c('q-tab-panel',{attrs:{\"name\":\"ratings\"}},[_c('h3',[_vm._v(\"Chat\")]),_c('div',{staticClass:\"q-pa-md row\"},[_c('div',{staticStyle:{\"width\":\"100%\"}},[(_vm.messages.length === 0)?_c('div',[_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(\"Momentan sind leider keine Kommentare oder Bewertungen vorhanden.\"),_c('br'),_vm._v(\"\\n              \"+_vm._s(!_vm.isUserCreator ? (_vm.user ? 'Sei der Erste und schreibe jetzt eine Bewertung!' : 'Melde dich an um die erste Bewertung abzugeben.') : ''))])]):_vm._e(),_vm._l((_vm.messages),function(message){return [_c('q-chat-message',{key:message.id,staticStyle:{\"font-size\":\"16px\"},attrs:{\"name\":message.Name + (!message.UID || _vm.user.uid !== message.UID ? '' : ' (Autor)' ),\"sent\":!message.UID || _vm.user.uid !== message.UID,\"name-sanitize\":\"\",\"text-sanitize\":\"\",\"text\":[message.Message],\"bg-color\":\"secondary\",\"text-color\":\"white\",\"stamp\":_vm.getStringDateFromTimestamp(message.Date)},scopedSlots:_vm._u([{key:\"avatar\",fn:function(){return [(message.Avatar)?_c('img',{class:'q-message-avatar ' + (!message.UID || _vm.user.uid !== message.UID ? 'q-message-avatar--sent' : 'q-message-avatar--received' ),attrs:{\"src\":message.Avatar}}):_c('q-icon',{class:'q-message-avatar ' + (!message.UID || _vm.user.uid !== message.UID ? 'q-message-avatar--sent' : 'q-message-avatar--received' ),attrs:{\"name\":\"account_circle\",\"size\":\"50px\"}})]},proxy:true}],null,true)},[(message.Rating)?_c('q-rating',{staticClass:\"stars\",attrs:{\"readonly\":\"\",\"size\":\"15px\",\"color\":\"gold\"},model:{value:(message.Rating),callback:function ($$v) {_vm.$set(message, \"Rating\", $$v)},expression:\"message.Rating\"}}):_vm._e()],1)]})],2),(_vm.user && !_vm.isUserCreator)?_c('div',{staticClass:\"flex\",staticStyle:{\"margin-top\":\"30px\"}},[_c('div',{staticClass:\"flex direction-column\"},[_c('q-input',{staticStyle:{\"width\":\"300px\",\"margin-right\":\"20px\",\"font-size\":\"18px\"},attrs:{\"placeholder\":\"Deine Nachricht\"},model:{value:(_vm.tempMessage),callback:function ($$v) {_vm.tempMessage=$$v},expression:\"tempMessage\"}}),_c('q-toggle',{staticStyle:{\"font-size\":\"18px\",\"margin-right\":\"10px\"},attrs:{\"label\":\"mit Bewertung\"},model:{value:(_vm.ratingEnabled),callback:function ($$v) {_vm.ratingEnabled=$$v},expression:\"ratingEnabled\"}}),_c('q-rating',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.ratingEnabled),expression:\"ratingEnabled\"}],staticClass:\"stars\",staticStyle:{\"margin-right\":\"15px\"},attrs:{\"size\":\"15px\",\"color\":\"gold\"},model:{value:(_vm.tempCommentStars),callback:function ($$v) {_vm.tempCommentStars=$$v},expression:\"tempCommentStars\"}})],1),_c('q-btn',{on:{\"click\":_vm.sendComment}},[_vm._v(\"Absenden\")])],1):_vm._e()])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"roundtrip-details q-px-lg q-pb-md\">\r\n    <div\r\n      class=\"edit-btn-container\"\r\n      v-if=\"user !== null\"\r\n      style=\"position:fixed; z-index:1; right:0; padding: 10px\"\r\n    >\r\n      <q-btn\r\n        round\r\n        color=\"primary\"\r\n        icon=\"edit\"\r\n        v-if=\"isUserCreator\"\r\n        @click=\"$router.push('/rundreisen-wizard/' + RTId)\"\r\n      >\r\n        <q-tooltip>Reise bearbeiten</q-tooltip>\r\n      </q-btn>\r\n\r\n      <q-btn\r\n        round\r\n        color=\"primary\"\r\n        icon=\"content_copy\"\r\n        v-else\r\n        @click=\"copyRTDialog = true\"\r\n      >\r\n        <q-tooltip>Reise bearbeiten</q-tooltip>\r\n      </q-btn>\r\n\r\n      <q-btn\r\n        round\r\n        color=\"primary\"\r\n        icon=\"settings\"\r\n        style=\"margin-left:10px;\"\r\n        v-if=\"isUserCreator\"\r\n        @click=\"$router.push('/rundreisen-einstellungen/' + RTId)\"\r\n      >\r\n        <q-tooltip>Reiseeinstellungen</q-tooltip>\r\n      </q-btn>\r\n\r\n      <q-dialog\r\n        v-model=\"copyRTDialog\"\r\n        persistent\r\n      >\r\n        <q-card style=\"min-width: 350px\">\r\n          <q-card-section>\r\n            <div class=\"text-h6\">Reise kopieren</div>\r\n            <span>Diese Reise wird kopiert und zu deinen eigenen Reisen hinzugefügt. <br /> Bitte gib dafür den neuen Titel der Reise ein.</span>\r\n          </q-card-section>\r\n\r\n          <q-card-section>\r\n            <q-input\r\n              v-model=\"copyRTTitle\"\r\n              autofocus\r\n              outlined\r\n              @input=\"checkDisableEditBtn($event)\"\r\n              :rules=\"[val => val !== null &&  val !== ''  || 'Bitte gib einen Titel an', val => sharedMethods.isUniqueTitle(val), val => val[0] !== ' ' || 'Das erste Zeichen kann kein Leerzeichen sein']\"\r\n              label=\"Titel der Rundreise\"\r\n              style=\"text-transform:capitalize;\"\r\n            />\r\n          </q-card-section>\r\n\r\n          <q-card-actions\r\n            align=\"right\"\r\n            class=\"text-primary\"\r\n          >\r\n            <q-btn\r\n              label=\"Abbrechen\"\r\n              v-close-popup\r\n              flat\r\n            />\r\n            <q-btn\r\n              type=\"submit\"\r\n              label=\"Rundreise kopieren\"\r\n              flat\r\n              v-close-popup\r\n              :disable=\"disableEditBtn\"\r\n              @click=\"copyRoundtrip()\"\r\n            />\r\n          </q-card-actions>\r\n        </q-card>\r\n      </q-dialog>\r\n    </div>\r\n    <div\r\n      class=\"back-link\"\r\n      style=\"padding-top:10px; padding-left:10px;\"\r\n    >\r\n      <a\r\n        v-if=\"!isUserCreator\"\r\n        @click=\"prevRouteParams && prevRouteParams.length > 0 ? $router.go(-1) : $router.push('/rundreisen/'  + roundtrip.Location[0])\"\r\n        style=\"text-decoration:none;\"\r\n      >\r\n        <q-icon name=\"keyboard_arrow_left\"></q-icon>\r\n        alle Rundreisen\r\n      </a>\r\n      <a\r\n        v-else\r\n        @click=\"$router.push('/meine-rundreisen')\"\r\n        style=\"text-decoration:none;\"\r\n      >\r\n        <q-icon name=\"keyboard_arrow_left\"></q-icon>\r\n        meine Rundreisen\r\n      </a>\r\n    </div>\r\n    <!-- <q-carousel\r\n      animated\r\n      v-model=\"slide\"\r\n      infinite\r\n      :autoplay=\"10000\"\r\n      swipeable\r\n      padding\r\n      arrows\r\n    >\r\n      <q-carousel-slide\r\n        v-for=\"(url, index) in galeryImgUrls\"\r\n        :key=\"index\"\r\n        style=\"padding:0;\"\r\n        :name=\"url\"\r\n      >\r\n        <q-img\r\n          class=\"full-width full-height\"\r\n          spinner-color=\"primary\"\r\n          :src=\"url\"\r\n        />\r\n      </q-carousel-slide>\r\n    </q-carousel> -->\r\n    <!-- <div class=\"carousel-placeholder\"> -->\r\n    <!-- <h1>{{roundtrip ? roundtrip.Title : null}}</h1> -->\r\n    <!-- </div> -->\r\n    <q-tabs\r\n      v-model=\"tab\"\r\n      dense\r\n      class=\"text-grey\"\r\n      active-color=\"primary\"\r\n      indicator-color=\"primary\"\r\n      align=\"justify\"\r\n      narrow-indicator\r\n      style=\"padding-top:50px;\"\r\n    >\r\n      <q-tab\r\n        name=\"overview\"\r\n        label=\"Übersicht\"\r\n      />\r\n      <q-tab\r\n        name=\"map\"\r\n        label=\"Karte\"\r\n      />\r\n      <q-tab\r\n        v-if=\"roundtrip.Public\"\r\n        name=\"ratings\"\r\n        label=\"Chat\"\r\n      />\r\n    </q-tabs>\r\n\r\n    <q-separator />\r\n\r\n    <q-tab-panels\r\n      v-model=\"tab\"\r\n      animated\r\n      ref=\"tabPanels\"\r\n      keep-alive\r\n    >\r\n      <q-tab-panel name=\"overview\">\r\n        <q-timeline color=\"secondary\">\r\n          <q-timeline-entry heading>\r\n            <div class=\"flex justify-between\">\r\n              <span>{{roundtrip ? roundtrip.Title : 'Reiseverlauf'}}</span>\r\n              <q-toggle\r\n                style=\"font-size:18px\"\r\n                @input=\"sharedMethods.expandAllStops(getContext, stops)\"\r\n                v-model=\"allStopsExpanded\"\r\n                label=\"Stopps ausklappen\"\r\n              ></q-toggle>\r\n            </div>\r\n            <div class=\"legal-description\">\r\n              <p v-if=\"!creator.companyProfile\">Alle Stopps, Hotels, Sehenswürdigkeiten usw. sind von {{ creator.UserName ? creator.UserName : ' dem Ersteller dieser Rundreise ' }} empfohlen.</p>\r\n              <p v-if=\"!creator.companyProfile\">Diese Reise dient nur zur Veranschaulichung und Darstellung eines Reisevorschlags.</p>\r\n              <span v-if=\"creator.UserName\">Diese Rundreise wurde von </span>\r\n              <router-link\r\n                v-if=\"roundtrip\"\r\n                :to=\"'/benutzerprofil/' + roundtrip.UserId\"\r\n              >\r\n                {{creator.UserName}}<q-tooltip>\r\n                  <q-avatar\r\n                    size=\"50px\"\r\n                    style=\"width: 50px; margin:0; padding:0;\"\r\n                  >\r\n                    <q-img :src=\"creator.UserImage\"></q-img>\r\n                  </q-avatar>\r\n                </q-tooltip>\r\n              </router-link>\r\n              <q-badge\r\n                v-if=\"creator.TrustedUser\"\r\n                align=\"top\"\r\n                color=\"blue\"\r\n                style=\"border-radius:50%; border-radius: 50%; padding: 2px; padding-top: 2.5px; margin-left:1px;\"\r\n              >\r\n                <q-icon\r\n                  name=\"done\"\r\n                  color=\"white\"\r\n                  size=\"13px\"\r\n                />\r\n                <q-tooltip>Dies ist ein von Roundtrips4you anerkannter User</q-tooltip>\r\n              </q-badge>\r\n              <span v-if=\"creator.UserName\"> erstellt</span>\r\n              <br>\r\n              <q-btn\r\n                style=\"margin-top:20px;\"\r\n                v-if=\"!!creator.companyProfile && creator.UserName && tripWebsite\"\r\n                @click=\"openInNewTab(tripWebsite)\"\r\n              >Bei {{creator.UserName}} buchen</q-btn>\r\n            </div>\r\n            <div class=\"details-desctiption-container\">\r\n              <p>{{roundtrip.Description}}</p>\r\n            </div>\r\n          </q-timeline-entry>\r\n          <template v-if=\"!stopsLoaded\">\r\n            <template v-for=\"n in 2\">\r\n              <q-timeline-entry :key=\"n\">\r\n                <template v-slot:subtitle>\r\n                  <q-skeleton\r\n                    width=\"300px\"\r\n                    height=\"10px\"\r\n                    type=\"rect\"\r\n                    style=\"margin-bottom:10px;\"\r\n                  />\r\n                </template>\r\n                <div\r\n                  class=\"flex\"\r\n                  style=\"margin-bottom:10px;\"\r\n                >\r\n                  <q-skeleton\r\n                    width=\"400px\"\r\n                    height=\"15px\"\r\n                    type=\"rect\"\r\n                    style=\"margin-right:10px;\"\r\n                  />\r\n                </div>\r\n                <q-skeleton\r\n                  width=\"90%\"\r\n                  height=\"50px\"\r\n                  type=\"rect\"\r\n                />\r\n              </q-timeline-entry>\r\n\r\n              <q-timeline-entry\r\n                icon=\"speed\"\r\n                :key=\"'A' + n\"\r\n              >\r\n                <template v-slot:subtitle>\r\n                  <q-skeleton\r\n                    width=\"300px\"\r\n                    height=\"10px\"\r\n                    type=\"rect\"\r\n                    style=\"margin-bottom:20px;\"\r\n                  />\r\n                </template>\r\n                <q-skeleton\r\n                  height=\"25px\"\r\n                  width=\"60px\"\r\n                  type=\"QChip\"\r\n                  style=\"margin-bottom:10px;\"\r\n                />\r\n              </q-timeline-entry>\r\n            </template>\r\n          </template>\r\n\r\n          <div\r\n            class=\"stop-list\"\r\n            v-show=\"stopsLoaded\"\r\n          >\r\n            <template v-for=\"(stop, index) in stops\">\r\n              <Stop\r\n                :key=\"stop.DocId\"\r\n                :title=\"stop.Title\"\r\n                :date=\"typeof stops[index].InitDate === 'string' ? stop.InitDate : sharedMethods.getStringDateFromTimestamp(stop.InitDate)\"\r\n                :nextStopDate=\"stops[index + 1] ? (typeof stops[index + 1].InitDate === 'string' ? stops[index + 1].InitDate : sharedMethods.getStringDateFromTimestamp(stops[index + 1].InitDate.seconds)) : null\"\r\n                :editor-placeholder=\"stop.Description\"\r\n                :editor=\"false\"\r\n                :docId=\"stop.DocId\"\r\n                :general-link=\"stop.GeneralLink\"\r\n                :location=\"stop.Location && typeof stop.Location !== 'undefined' && stop.Location ? stop.Location : null\"\r\n                :parkingPlace=\"stop.Parking && typeof stop.Parking !== 'undefined' && stop.Parking ? stop.Parking : null\"\r\n                :lastItem=\"index === stops.length -1\"\r\n                :hotelStars=\"parseInt(stop.HotelStars)\"\r\n                :hotelName=\"stop.HotelName\"\r\n                :hotelPrice=\"stop.HotelPrice\"\r\n                :guestRating=\"stop.GuestRating\"\r\n                :transportLocations=\"stop.TransportLocations\"\r\n                :hotelLocation=\"stop.HotelLocation\"\r\n                :hotelContact=\"stop.HotelContact\"\r\n                :adults=\"parseInt(adults)\"\r\n                :childrenAges=\"childrenAges\"\r\n                :rooms=\"parseInt(rooms)\"\r\n                :firstStop=\"index === 0\"\r\n                :galeryImgUrls=\"galeryImgUrls\"\r\n                :stopImages=\"typeof stop.StopImages === 'undefined' ? null : stop.StopImages\"\r\n                :addedSights=\"stop.Sights ? stop.Sights : []\"\r\n                :days=\"days[days.findIndex(x => x.docId === stop.DocId)] ? days[days.findIndex(x => x.docId === stop.DocId)].days : null\"\r\n                :dailyTrips=\"stop.DailyTrips ? stop.DailyTrips : []\"\r\n                :expanded=\"stop.expanded\"\r\n                :profile=\"stop.Profile\"\r\n                @expansionChanged=\"sharedMethods.expansionChanged(getContext, $event)\"\r\n                :class=\"'stop' + stop.DocId\"\r\n                :ref=\"stop.DocId\"\r\n              ></Stop>\r\n              <Duration\r\n                :key=\"'Stop' + stop.DocId\"\r\n                v-if=\"index !== stops.length - 1 && durations[durations.findIndex(x => x.docId === stop.DocId)] && durations[durations.findIndex(x => x.docId === stop.DocId)].duration !== null\"\r\n                :duration=\"durations[durations.findIndex(x => x.docId === stop.DocId)].duration + durations[durations.findIndex(x => x.docId === stop.DocId)].distance\"\r\n                :defaultProfile=\"stop.Profile ? getStringProfile(stop.Profile) : inputProfile\"\r\n                :roundtripProfile=\"inputProfile\"\r\n              ></Duration>\r\n            </template>\r\n          </div>\r\n        </q-timeline>\r\n        <a\r\n          class=\"panel-links\"\r\n          @click=\"$refs.tabPanels.goTo('map')\"\r\n        >zur Karte</a>\r\n\r\n      </q-tab-panel>\r\n\r\n      <q-tab-panel name=\"map\">\r\n        <Map\r\n          :profile=\"getProfile(inputProfile)\"\r\n          :stops=\"stops\"\r\n          :childrenAges=\"childrenAges\"\r\n          :adults=\"parseInt(adults)\"\r\n          :rooms=\"parseInt(rooms)\"\r\n        ></Map>\r\n        <br>\r\n        <a @click=\"$refs.tabPanels.goTo('overview')\">zur Routenübersicht</a>\r\n      </q-tab-panel>\r\n      <q-tab-panel name=\"ratings\">\r\n        <h3>Chat</h3>\r\n        <div class=\"q-pa-md row\">\r\n          <div style=\"width: 100%;\">\r\n            <div v-if=\"messages.length === 0\">\r\n              <span style=\"font-size:18px;\">Momentan sind leider keine Kommentare oder Bewertungen vorhanden.<br>\r\n                {{ !isUserCreator ? (user ? 'Sei der Erste und schreibe jetzt eine Bewertung!' : 'Melde dich an um die erste Bewertung abzugeben.') : ''}}</span>\r\n            </div>\r\n            <template v-for=\"message in messages\">\r\n              <!-- <q-chat-message\r\n                v-if=\"!message[index -1] || getStringDateFromTimestamp(message[index -1].Date) !== getStringDateFromTimestamp(message.Date)\"\r\n                :key=\"'date' + message.id\"\r\n                :label=\"getStringDateFromTimestamp(message.Date)\"\r\n              /> -->\r\n              <!-- <q-chat-message\r\n              name=\"me\"\r\n              :text=\"['hey, how are you?']\"\r\n            >\r\n              <q-rating\r\n                class=\"stars\"\r\n                v-model=\"tempStars\"\r\n                size=\"15px\"\r\n                color=\"gold\"\r\n                style=\"margin-right:10px;\"\r\n              />\r\n            </q-chat-message> -->\r\n              <q-chat-message\r\n                :key=\"message.id\"\r\n                :name=\"message.Name + (!message.UID || user.uid !== message.UID ? '' : ' (Autor)' )\"\r\n                :sent=\"!message.UID || user.uid !== message.UID\"\r\n                name-sanitize\r\n                text-sanitize\r\n                :text=\"[message.Message]\"\r\n                bg-color=\"secondary\"\r\n                text-color=\"white\"\r\n                style=\"font-size:16px;\"\r\n                :stamp=\"getStringDateFromTimestamp(message.Date)\"\r\n              >\r\n                <q-rating\r\n                  v-if=\"message.Rating\"\r\n                  class=\"stars\"\r\n                  v-model=\"message.Rating\"\r\n                  readonly\r\n                  size=\"15px\"\r\n                  color=\"gold\"\r\n                />\r\n                <template v-slot:avatar>\r\n                  <img\r\n                    v-if=\"message.Avatar\"\r\n                    :class=\"'q-message-avatar ' + (!message.UID || user.uid !== message.UID ? 'q-message-avatar--sent' : 'q-message-avatar--received' ) \"\r\n                    :src=\"message.Avatar\"\r\n                  >\r\n                  <q-icon\r\n                    v-else\r\n                    :class=\"'q-message-avatar ' + (!message.UID || user.uid !== message.UID ? 'q-message-avatar--sent' : 'q-message-avatar--received' ) \"\r\n                    name=\"account_circle\"\r\n                    size=\"50px\"\r\n                  />\r\n                </template>\r\n              </q-chat-message>\r\n            </template>\r\n\r\n          </div>\r\n          <div\r\n            v-if=\"user && !isUserCreator\"\r\n            class=\"flex\"\r\n            style=\"margin-top:30px;\"\r\n          >\r\n            <div class=\"flex direction-column\">\r\n              <q-input\r\n                v-model=\"tempMessage\"\r\n                style=\"width:300px; margin-right:20px; font-size:18px;\"\r\n                placeholder=\"Deine Nachricht\"\r\n              />\r\n              <q-toggle\r\n                v-model=\"ratingEnabled\"\r\n                style=\"font-size:18px; margin-right:10px;\"\r\n                label=\"mit Bewertung\"\r\n              ></q-toggle>\r\n              <q-rating\r\n                v-show=\"ratingEnabled\"\r\n                class=\"stars\"\r\n                v-model=\"tempCommentStars\"\r\n                size=\"15px\"\r\n                color=\"gold\"\r\n                style=\"margin-right:15px;\"\r\n              />\r\n            </div>\r\n            <q-btn @click=\"sendComment\">Absenden</q-btn>\r\n          </div>\r\n        </div>\r\n      </q-tab-panel>\r\n    </q-tab-panels>\r\n  </div>\r\n</template>\r\n<script>\r\nimport(/* webpackPrefetch: true */ '../css/editRoundtrips.less')\r\nimport { date } from 'quasar'\r\nimport { db, storage, auth } from '../firebaseInit.js'\r\nconst getAxios = () => import('axios')\r\nimport { TaskQueue } from 'cwait'\r\nimport sharedMethods from '../sharedMethods'\r\n\r\nlet details = []\r\nlet messages = []\r\n\r\n// context of the vue app (set in mounted)\r\nlet context\r\n\r\nexport default {\r\n  components: {\r\n    Stop: () => import('../pages/EditRoundtripComponents/stop'),\r\n    Map: () => import('../pages/Map/Map'),\r\n    Duration: () => import('../pages/EditRoundtripComponents/duration')\r\n  },\r\n  data () {\r\n    return {\r\n      dates: [],\r\n      stops: [],\r\n      roundtrip: [],\r\n      slide: null,\r\n      galeryImgUrls: [],\r\n      tab: 'overview',\r\n      durations: [],\r\n      accessToken: 'pk.eyJ1IjoibWFyZWlza2kiLCJhIjoiY2pkaHBrd2ZnMDIyOTMzcDIyM2lra3M0eSJ9.wcM4BSKxfOmOzo67iW-nNg',\r\n      days: [],\r\n      copyRTDialog: false,\r\n      copyRTTitle: null,\r\n      inputProfile: null,\r\n      childrenAges: [],\r\n      adults: 0,\r\n      rooms: 0,\r\n      Profile: '',\r\n      checkOutDate: null,\r\n      pageTitle: 'User',\r\n      prevRouteParams: null,\r\n      disableEditBtn: false,\r\n      allStopsExpanded: false,\r\n      currentExpansionStates: [],\r\n      firstLoad: true,\r\n      stopsLoaded: false,\r\n      creator: {},\r\n      tripWebsite: null,\r\n      messages: [],\r\n      tempMessage: null,\r\n      RTId: null,\r\n      tempCommentStars: 3,\r\n      ratingEnabled: true,\r\n      isUserCreator: false\r\n    }\r\n  },\r\n  beforeRouteEnter (to, from, next) {\r\n    next(vm => {\r\n      vm.prevRouteParams = from.params\r\n    })\r\n  },\r\n  computed: {\r\n    user () {\r\n      return this.$store.getters['user/user']\r\n    },\r\n    sharedMethods () {\r\n      return sharedMethods\r\n    },\r\n    getContext () {\r\n      return context\r\n    }\r\n  },\r\n  meta () {\r\n    return {\r\n      title: 'Reise ansehen',\r\n      meta: {\r\n        description: { name: 'description', content: 'Reise auf roundtrips4you ansehen, komplett kostenlos, online und unkompliziert. Dein Reiseplaner mit Kartenfunktion, Städtevorschlag, Hotelsuche...' }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    loadSingleRoundtrip (RTId) {\r\n      this.$store.dispatch('roundtrips/fetchSingleRoundtrip', RTId).then(roundtrip => {\r\n        this.roundtrip = roundtrip\r\n\r\n        if ((!auth.user() || (auth.user().uid !== roundtrip.UserId)) && !roundtrip.Public) {\r\n          sharedMethods.showErrorNotification('Diese Reise wurde nicht veröffentlicht')\r\n          this.$router.push('/rundreisen/' + roundtrip.Location[0])\r\n        } else {\r\n          if (auth.user() && auth.user().uid === roundtrip.UserId) this.isUserCreator = true\r\n        }\r\n\r\n        this.loadUserData(roundtrip.UserId)\r\n        this.inputProfile = roundtrip.Profile\r\n\r\n        // set default values to ensure privacy\r\n        this.childrenAges = []\r\n        this.rooms = 1\r\n        this.adults = 2\r\n        this.roundtrip = roundtrip\r\n\r\n        this.profile = this.getProfile(roundtrip.Profile)\r\n        this.tripWebsite = roundtrip.tripWebsite\r\n\r\n        this.loadGaleryImgs()\r\n        this.getUserRatings(RTId)\r\n      }).catch(err => {\r\n        console.log('Error getting Roundtrip', err)\r\n      })\r\n    },\r\n    getDefaultCheckOutDate (stop) {\r\n      let initDate = null\r\n      if (stop.InitDate.seconds) initDate = new Date(stop.InitDate.seconds * 1000)\r\n      else initDate = sharedMethods.getDateFromString(stop.InitDate)\r\n\r\n      // add one day\r\n      const defaultCheckOutDate = initDate\r\n      defaultCheckOutDate.setDate(initDate.getDate() + 1)\r\n\r\n      return date.formatDate(defaultCheckOutDate, 'DD.MM.YYYY')\r\n    },\r\n    getStringDateFromTimestamp (timestamp) {\r\n      const initDate = new Date(timestamp.seconds * 1000)\r\n      return date.formatDate(initDate, 'DD.MM.YYYY HH:mm')\r\n    },\r\n    getUserRatings (RTId) {\r\n      let roundtripsRef = db.collection('Comments')\r\n        .where('RTId', '==', RTId)\r\n        .orderBy('Date')\r\n      roundtripsRef.get()\r\n        .then(snapshot => {\r\n          messages = []\r\n          snapshot.forEach(doc => {\r\n            let index = messages.push(doc.data()) - 1\r\n            messages[index].id = doc.id\r\n          })\r\n          this.messages = messages\r\n        })\r\n    },\r\n    sendComment () {\r\n      db.collection('Comments').add({\r\n        Date: new Date(Date.now()),\r\n        Message: this.tempMessage,\r\n        Name: auth.user().displayName,\r\n        Avatar: auth.user().photoURL,\r\n        UID: auth.user().uid,\r\n        RTId: this.RTId,\r\n        Rating: this.ratingEnabled ? this.tempCommentStars : null\r\n      }).then(results => {\r\n        this.getUserRatings(this.RTId)\r\n        this.tempMessage = null\r\n      })\r\n    },\r\n    loadUserData (UserId) {\r\n      let context = this\r\n      let userRef = db.collection('User')\r\n        .where('UserUID', '==', UserId)\r\n        .limit(1)\r\n      userRef.get()\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            context.creator = doc.data()\r\n          })\r\n        })\r\n    },\r\n    loadRoundtripDetails (RTId, retrievedDate) {\r\n      this.selectedCountry = this.country\r\n      this.visible = true\r\n      this.showSimulatedReturnData = false\r\n      let roundtripsRef = db.collection('RoundtripDetails')\r\n        .where('RTId', '==', RTId)\r\n        .orderBy('InitDate')\r\n      roundtripsRef.get()\r\n        .then(snapshot => {\r\n          details = []\r\n          snapshot.forEach(doc => {\r\n            let index = details.push(doc.data()) - 1\r\n            details[index].DocId = doc.id\r\n          })\r\n\r\n          this.stops = details\r\n          this.stops.sort(this.compare)\r\n\r\n          let initDates = []\r\n\r\n          // get dates\r\n          details.forEach((detail, index) => {\r\n            const initDate = new Date(detail.InitDate.seconds * 1000)\r\n            initDates.splice(index, 0, initDate)\r\n\r\n            retrievedDate = new Date(retrievedDate)\r\n            retrievedDate.setMinutes(initDate.getMinutes())\r\n            retrievedDate.setHours(initDate.getHours())\r\n\r\n            if (index > 0) {\r\n              const date1 = initDates[index - 1]\r\n              const date2 = initDates[index]\r\n              const diffTime = new Date(date2 - date1).getTime()\r\n\r\n              const addedTime = retrievedDate.setTime(retrievedDate.getTime() + diffTime)\r\n              const addedDate = new Date(addedTime)\r\n\r\n              addedDate.setMinutes(initDate.getMinutes())\r\n              addedDate.setHours(initDate.getHours())\r\n\r\n              const returnDate = date.formatDate(addedDate, 'DD.MM.YYYY HH:mm')\r\n\r\n              this.dates.splice(index, 0, returnDate)\r\n            } else {\r\n              this.dates.splice(index, 0, date.formatDate(retrievedDate, 'DD.MM.YYYY HH:mm'))\r\n            }\r\n\r\n            if (details.indexOf(stop) === details.length - 1) {\r\n              // add one day\r\n              const defaultCheckOutDate = new Date()\r\n              defaultCheckOutDate.setDate(initDate.getDate() + 1)\r\n\r\n              this.checkOutDate = date.formatDate(defaultCheckOutDate, 'DD.MM.YYYY')\r\n            }\r\n          })\r\n          this.stops = details\r\n\r\n          let tempUrls = []\r\n          let tempUrlDocObjects = []\r\n\r\n          getAxios().then(axios => {\r\n            this.stops.forEach((stop, index) => {\r\n              if (index >= 1) {\r\n                let url = this.getDurationUrl([this.stops[index - 1].Location.lng, this.stops[index - 1].Location.lat],\r\n                  [stop.Location.lng, stop.Location.lat], index !== this.stops.length ? this.stops[index - 1].DocId : this.stops[index].DocId,\r\n                  index !== this.stops.length ? this.stops[index - 1].Profile : this.stops[index].Profile, index !== this.stops.length ? this.stops[index - 1] : this.stops[index], index !== this.stops.length ? index - 1 : index)\r\n\r\n                if (url) {\r\n                  tempUrls.push(url)\r\n\r\n                  tempUrlDocObjects.push({ id: this.stops[index - 1].DocId, url: url })\r\n                }\r\n              }\r\n\r\n              // if its the last stop\r\n              if (index === this.stops.length - 1) {\r\n                this.stopsLoaded = true\r\n\r\n                // get durations\r\n                const urls = tempUrls\r\n                const queue = new TaskQueue(Promise, 5)\r\n                Promise.all(urls.map(queue.wrap(async url => axios.get(url)))).then(results => {\r\n                  results.forEach((result, resultIndex) => {\r\n                    const docId = tempUrlDocObjects[tempUrlDocObjects.findIndex(x => x.url === result.config.url)].id\r\n\r\n                    this.writeDuration(result.data.routes[0], docId)\r\n                  })\r\n                }).catch(function (error) {\r\n                  console.log(error)\r\n                })\r\n              }\r\n            })\r\n          })\r\n\r\n          // this.stops.forEach((stop, index) => {\r\n          //   if (index >= 1) this.getDuration([this.stops[index - 1].Location.lng, this.stops[index - 1].Location.lat], [stop.Location.lng, stop.Location.lat], this.stops[index - 1].Title, this.stops[index - 1], index - 1, this.stops[index - 1].Profile)\r\n          // })\r\n\r\n          let context = this\r\n          setTimeout(function () {\r\n            context.stops.forEach(stop => {\r\n              if (context.firstLoad || !context.currentExpansionStates) {\r\n                if (context.$refs[stop.DocId]) context.$refs[stop.DocId][0].changeExpansion(false)\r\n                context.currentExpansionStates.push({ docId: stop.DocId, expanded: false })\r\n              } else {\r\n                if (context.currentExpansionStates[context.currentExpansionStates.findIndex(x => x.docId === stop.DocId)]) {\r\n                  context.$refs[stop.DocId][0].changeExpansion(context.currentExpansionStates[context.currentExpansionStates.findIndex(x => x.docId === stop.DocId)].expanded)\r\n                } else {\r\n                  // this stop was not already added\r\n                  context.$refs[stop.DocId][0].changeExpansion(false)\r\n                }\r\n              }\r\n            })\r\n            this.firstLoad = false\r\n          }, 500)\r\n        })\r\n        .catch(err => {\r\n          console.log('Error getting Roundtripdetails', err)\r\n        })\r\n    },\r\n    /**\r\n     * copies the current trip and adds it to current user\r\n     */\r\n    copyRoundtrip () {\r\n      if (!this.isUserCreator) {\r\n        const originalRT = this.roundtrip\r\n        const UserId = auth.user().uid\r\n        const newTitle = this.copyRTTitle\r\n\r\n        sharedMethods.isUniqueTitle(newTitle).then(uniqueTitle => {\r\n          if (newTitle === null || newTitle === '' || uniqueTitle === 'Dieser Titel ist bereits vergeben') {\r\n            sharedMethods.showErrorNotification('Bitte überprüfe den Titel deiner Reise')\r\n            return false\r\n          } else {\r\n            sharedMethods.showSuccessNotification('Rundreise wird zum kopiert...')\r\n          }\r\n\r\n          let timeStamp = Date.now()\r\n\r\n          // create a temporary random id for rtid\r\n          let tempRTId = Math.floor(Math.random() * 10000000000000)\r\n\r\n          let newRoundtrip = {}\r\n\r\n          let originalRTId = originalRT.RTId\r\n\r\n          // copy all values\r\n          newRoundtrip = originalRT\r\n\r\n          // change all different values here\r\n          newRoundtrip.RTId = tempRTId\r\n          newRoundtrip.UserId = UserId\r\n          newRoundtrip.Public = false\r\n          newRoundtrip.Title = newTitle\r\n          newRoundtrip.createdAt = new Date(timeStamp)\r\n\r\n          // create new document with original rt data\r\n          db.collection('Roundtrips').add(newRoundtrip).then(result => {\r\n            console.log(originalRTId)\r\n            const newRTId = result.id\r\n\r\n            // remove temp RTId and update it with doc id\r\n            db.collection('Roundtrips').doc(newRTId).update({\r\n              'RTId': newRTId\r\n            }).catch(ex => {\r\n              console.log(ex)\r\n            })\r\n\r\n            // get roundtrip details and update with original rt data\r\n            let roundtripDetailsRef = db.collection('RoundtripDetails')\r\n              .where('RTId', '==', originalRTId)\r\n            roundtripDetailsRef.get()\r\n              .then(detailsSnapshot => {\r\n                detailsSnapshot.forEach(detailDoc => {\r\n                  let docData = detailDoc.data()\r\n\r\n                  // copy all original values\r\n                  let newRoundtripDetails = docData\r\n\r\n                  // change different values here\r\n                  newRoundtripDetails.RTId = newRTId\r\n\r\n                  db.collection('RoundtripDetails').add(newRoundtripDetails).then(() => {\r\n                    // -- everything succeeded --\r\n\r\n                    // add new copy entry to user\r\n                    let userRef = db.collection('User')\r\n                      .where('UserUID', '==', UserId)\r\n                      .limit(1)\r\n                    userRef.get()\r\n                      .then(snapshot => {\r\n                        snapshot.forEach(doc => {\r\n                          let userRTEdited = doc.data().RTEdited\r\n                          db.collection('User').doc(UserId).update({\r\n                            'RTEdited': (userRTEdited + 1)\r\n                          })\r\n                        })\r\n                      }).catch(ex => {\r\n                        console.log(ex)\r\n                      })\r\n\r\n                    // refresh page\r\n                    this.$router.push('/rundreise-ansehen/' + newRTId)\r\n                    this.isUserCreator = true\r\n                  }).catch(ex => {\r\n                    console.log(ex)\r\n                  })\r\n                })\r\n              })\r\n          }).catch(ex => {\r\n            console.log(ex)\r\n          })\r\n        }\r\n        )\r\n      }\r\n    },\r\n    /**\r\n    * sorts trip stops after their init dates (must be placed in sort())\r\n    */\r\n    compare (a, b) {\r\n      const initDateA = typeof a.InitDate === 'string' ? sharedMethods.getDateFromString(a.InitDate) : new Date(a.InitDate.seconds * 1000)\r\n      const initDateB = typeof b.InitDate === 'string' ? sharedMethods.getDateFromString(b.InitDate) : new Date(b.InitDate.seconds * 1000)\r\n\r\n      if (initDateA > initDateB) return 1\r\n      if (initDateB > initDateA) return -1\r\n\r\n      return 0\r\n    },\r\n    checkDisableEditBtn (val) {\r\n      sharedMethods.isUniqueTitle(val).then(uniqueTitle => {\r\n        if (uniqueTitle === 'Dieser Titel ist bereits vergeben') uniqueTitle = false\r\n        this.disableEditBtn = val === null || val === '' || !uniqueTitle\r\n      }\r\n      )\r\n    },\r\n    getDurationUrl (startLocation, endLocation, docId, stopProfile, stop, index) {\r\n      let profile = this.profile\r\n      if (stopProfile !== null && typeof stopProfile !== 'undefined' && stopProfile.length > 0) profile = stopProfile\r\n\r\n      if (profile !== 'plane') {\r\n        return 'https://api.mapbox.com/directions/v5/mapbox/' + profile + '/' + startLocation[0] + ',' + startLocation[1] + ';' + endLocation[0] + ',' + endLocation[1] + '?geometries=geojson&access_token=' + this.accessToken\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n    writeDuration (result, docId) {\r\n      if (result !== null && typeof result !== 'undefined') {\r\n        let duration = sharedMethods.msToTime(result.duration * 1000)\r\n\r\n        let distance = Math.floor(result.distance / 1000) > 0 ? Math.floor(result.distance / 1000) : ''\r\n        if (distance !== '') {\r\n          this.tripDistance = this.tripDistance + distance\r\n          distance = ' (' + distance + 'km)'\r\n        }\r\n\r\n        this.durations.splice(this.stops.findIndex(x => x.DocId === docId), 0, { duration: duration, durationInMs: result.duration * 1000, distance: distance, docId: docId })\r\n\r\n        this.getDays(this.stops[this.stops.findIndex(x => x.DocId === docId)], result.duration * 1000)\r\n      } else {\r\n        this.durations.splice(this.stops.findIndex(x => x.DocId === docId), 0, { duration: null, distance: null, docId: docId })\r\n        if (this.stops.indexOf(stop) === this.stops.length - 2) this.stopsLoaded = true\r\n      }\r\n    },\r\n    getProfile (profile) {\r\n      switch (profile) {\r\n        case 'zu Fuß':\r\n          return 'walking'\r\n        case 'Fahrrad':\r\n          return 'cycling'\r\n        case 'Flugzeug':\r\n          return 'plane'\r\n        default:\r\n          return 'driving'\r\n      }\r\n    },\r\n    getStringProfile (profile) {\r\n      switch (profile) {\r\n        case 'walking':\r\n          return 'zu Fuß'\r\n        case 'cycling':\r\n          return 'Fahrrad'\r\n        case 'plane':\r\n          return 'Flugzeug'\r\n        default:\r\n          return 'Auto'\r\n      }\r\n    },\r\n    getDays (stop, duration) {\r\n      let days = null\r\n\r\n      if (this.stops.indexOf(stop) < this.stops.length - 1) {\r\n        let formattedDate = stop.InitDate\r\n        if (typeof stop.InitDate !== 'string') {\r\n          formattedDate = date.formatDate(new Date(stop.InitDate.seconds * 1000), 'DD.MM.YYYY HH:mm')\r\n        }\r\n\r\n        let dateTimeParts = formattedDate.split(' ')\r\n        let dateParts = dateTimeParts[0].split('.')\r\n        let timeParts = dateTimeParts[1].split(':')\r\n        let currentInitDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1], '00')\r\n\r\n        if (typeof stop.InitDate !== 'string') {\r\n          formattedDate = date.formatDate(new Date(this.stops[this.stops.indexOf(stop) + 1].InitDate.seconds * 1000), 'DD.MM.YYYY HH:mm')\r\n        } else {\r\n          formattedDate = this.stops[this.stops.indexOf(stop) + 1].InitDate\r\n        }\r\n\r\n        dateTimeParts = formattedDate.split(' ')\r\n        dateParts = dateTimeParts[0].split('.')\r\n        timeParts = dateTimeParts[1].split(':')\r\n        let nextInitDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1], '00')\r\n\r\n        let dateDistance = (nextInitDate.getTime() - currentInitDate.getTime()) - duration\r\n        days = sharedMethods.msToTime(dateDistance)\r\n      }\r\n      this.days.splice(this.stops.findIndex(x => x.DocId === stop.docId), 0, { days: days, docId: stop.DocId })\r\n      if (this.stops.indexOf(stop) === this.stops.length - 2) this.stopsLoaded = true\r\n    },\r\n    loadGaleryImgs () {\r\n      const context = this\r\n      let fileRef = storage.ref().child('Images/Roundtrips/' + context.roundtrip.docId + '/Galery')\r\n      fileRef.listAll().then(function (res) {\r\n        res.items.forEach(function (itemRef) {\r\n          fileRef = storage.ref().child(itemRef.fullPath)\r\n          context.galeryImgUrls = []\r\n          fileRef.getDownloadURL().then(function (url) {\r\n            context.galeryImgUrls.push(url)\r\n            if (context.galeryImgUrls.length === 1) context.slide = url\r\n          })\r\n        })\r\n      }).catch(function (error) {\r\n        console.log(error)\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    context = this\r\n  },\r\n  created () {\r\n    const params = this.$route.params.id\r\n    let RTId = params\r\n    let userDate = null\r\n\r\n    if (params.includes('&')) {\r\n      RTId = params.split('&')[0]\r\n      userDate = params.split('&')[1]\r\n    }\r\n\r\n    this.RTId = RTId\r\n\r\n    this.loadSingleRoundtrip(RTId)\r\n    this.loadRoundtripDetails(RTId, parseInt(userDate))\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./roundtripDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./roundtripDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./roundtripDetails.vue?vue&type=template&id=6893d8de&\"\nimport script from \"./roundtripDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./roundtripDetails.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',[_c('div',{staticClass:\"roundtrips\"},[_c('div',{staticClass:\"overview-topic\"},[_c('h1',[_vm._v(\"Eigene Reise erstellen\")]),_c('span',[_vm._v(\"Beginne damit deine eigene Reise nach deinen Wünschen zusammenzutellen\")])]),_c('div',{attrs:{\"id\":\"CardBackgroundImg\"}}),_c('div',{staticStyle:{\"height\":\"515px\",\"min-height\":\"unset\"},attrs:{\"id\":\"CardBackgroundImgPlaceholder\"}},[_c('div',{staticClass:\"country-card-container\"},[_c('router-link',{staticClass:\"country-card\",style:({ backgroundImage: 'url(https://roundtrips4you.de/statics/oldCard.jpg)' }),attrs:{\"to\":\"/meine-rundreisen/\"}},[_c('h2',{staticClass:\"country-title\"},[_vm._v(\"Meine Reisen\")]),_c('div',{staticClass:\"button\"},[_vm._v(\"Zu meinen Reisen\\n          \")])])],1)]),_c('div',{staticClass:\"overview-topic\"},[_c('h2',[_vm._v(\"Vorgefertigte Reisen\")]),_c('span',[_vm._v(\"Lasse dich hier von den Reisen anderer User inspirieren, oder bearbeite diese wenn du für dich etwas ändern möchtest\")])]),_c('div',{attrs:{\"id\":\"CardBackgroundImg\"}}),_c('div',{attrs:{\"id\":\"CardBackgroundImgPlaceholder\"}},_vm._l((_vm.countries),function(country){return _c('div',{key:country.Name,staticClass:\"country-card-container\"},[_c('router-link',{staticClass:\"country-card\",style:({ backgroundImage: 'url('+ country.ImageUrl +')' }),attrs:{\"to\":'/rundreisen/' + country.Name}},[_c('h2',{staticClass:\"country-title\"},[_vm._v(_vm._s(country.Name))]),_c('div',{staticClass:\"button\",attrs:{\"to\":'/rundreisen/' + country.Name}},[_vm._v(\"Zu den Rundreisen\\n          \")])])],1)}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <q-page>\r\n    <div class=\"roundtrips\">\r\n      <div class=\"overview-topic\">\r\n        <h1>Eigene Reise erstellen</h1>\r\n        <span>Beginne damit deine eigene Reise nach deinen Wünschen zusammenzutellen</span>\r\n      </div>\r\n      <div id=\"CardBackgroundImg\"></div>\r\n      <div\r\n        id=\"CardBackgroundImgPlaceholder\"\r\n        style=\"height:515px; min-height:unset;\"\r\n      >\r\n        <div class=\"country-card-container\">\r\n          <router-link\r\n            class=\"country-card\"\r\n            to=\"/meine-rundreisen/\"\r\n            :style=\"{ backgroundImage: 'url(https://roundtrips4you.de/statics/oldCard.jpg)' }\"\r\n          >\r\n            <h2 class=\"country-title\">Meine Reisen</h2>\r\n            <div class=\"button\">Zu meinen Reisen\r\n            </div>\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n      <div class=\"overview-topic\">\r\n        <h2>Vorgefertigte Reisen</h2>\r\n        <span>Lasse dich hier von den Reisen anderer User inspirieren, oder bearbeite diese wenn du für dich etwas ändern möchtest</span>\r\n      </div>\r\n      <div id=\"CardBackgroundImg\"></div>\r\n      <div id=\"CardBackgroundImgPlaceholder\">\r\n        <div\r\n          class=\"country-card-container\"\r\n          v-for=\"country in countries\"\r\n          :key=\"country.Name\"\r\n        >\r\n          <router-link\r\n            class=\"country-card\"\r\n            :to=\"'/rundreisen/' + country.Name\"\r\n            :style=\"{ backgroundImage: 'url('+ country.ImageUrl +')' }\"\r\n          >\r\n            <h2 class=\"country-title\">{{country.Name}}</h2>\r\n            <div\r\n              class=\"button\"\r\n              :to=\"'/rundreisen/' + country.Name\"\r\n            >Zu den Rundreisen\r\n            </div>\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </q-page>\r\n</template>\r\n<script>\r\nimport(/* webpackPrefetch: true */ '../css/roundtrips.less')\r\nimport { db } from '../firebaseInit.js'\r\nexport default {\r\n  meta: {\r\n    title: 'Rundreisen',\r\n    meta: {\r\n      description: { name: 'description', content: 'Länder auf roundtrips4you ansehen, komplett kostenlos, online und unkompliziert. Dein Reiseplaner mit Kartenfunktion, Städtevorschlag, Hotelsuche...' }\r\n\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      countries: []\r\n    }\r\n  },\r\n  name: 'RoundtripOverview',\r\n  methods: {\r\n    loadCountries () {\r\n      let countriesRef = db.collection('Countries')\r\n        .orderBy('Name')\r\n        .limit(200)\r\n\r\n      countriesRef.get()\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            this.countries.push(doc.data())\r\n          })\r\n        })\r\n    }\r\n  },\r\n  created () {\r\n    this.loadCountries()\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RoundtripOverview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RoundtripOverview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RoundtripOverview.vue?vue&type=template&id=9437760c&\"\nimport script from \"./RoundtripOverview.vue?vue&type=script&lang=js&\"\nexport * from \"./RoundtripOverview.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}